{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["data","pageContext","posts","allMarkdownRemark","edges","page","currentPage","numPages","prevPage","toString","nextPage","isFirst","isLast","title","description","className","map","index","node","frontmatter","date","slug","fields","key","to","rel","aria-label","query"],"mappings":"yNAKe,sBAA4B,IAAzBA,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAEQC,EAC1BF,EADFG,kBAAqBC,MAEFC,EAAmBJ,EAAhCK,YAAmBC,EAAaN,EAAbM,SACrBC,EAAWH,EAAO,GAAM,EAAI,KAAOA,EAAO,GAAGI,WAC7CC,EAAW,UAAYL,EAAO,GAAGI,WACjCE,EAAmB,IAATN,EACVO,EAASP,IAASE,EAExB,OACE,kBAAC,IAAD,KACE,kBAAC,SAAD,CAAQM,MAAO,8DACf,kBAAC,IAAD,CAAMA,MAAO,sDAAuDC,YAAa,+BACjF,yBAAKC,UAAW,aACbb,EAAMc,KAAI,WAAWC,GAAW,IAAnBC,EAAkB,EAAlBA,KAAkB,EAI1BA,EAFFC,YAAeN,EAFa,EAEbA,MAAOC,EAFM,EAENA,YAAaM,EAFP,EAEOA,KACzBC,EACRH,EADFI,OAAUD,KAEZ,OAAO,kBAAC,IAAD,CAAUE,IAAKN,EAAOA,MAAOA,EAAOI,KAAMA,EAAMR,MAAOA,EAAOC,YAAaA,EAAaM,KAAMA,QAGzG,yBAAKL,UAAW,eACZJ,GACA,kBAAC,IAAD,CAAMa,GAAIhB,EAAUiB,IAAI,OAAOC,aAAW,iBAA1C,WAIAd,GACA,kBAAC,IAAD,CAAMY,GAAId,EAAUe,IAAI,OAAOC,aAAW,aAA1C,aASH,IAAMC,EAAK","file":"component---src-templates-blog-js-5b3a0d70641102f8db57.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { Hero, Layout, PostCard } from '../components'\nimport { Helmet } from 'react-helmet'\n\nexport default ({ data, pageContext }) => {\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n  const { currentPage: page, numPages } = pageContext\n  const prevPage = page - 1 === 1 ? '/' : (page - 1).toString()\n  const nextPage = '/blog/' + (page + 1).toString()\n  const isFirst = page === 1\n  const isLast = page === numPages\n\n  return (\n    <Layout>\n      <Helmet title={\"Articles about design and code · Edmundo Santos, Designer\"} />\n      <Hero title={'Exploring ideas about design, code, and technology.'} description={'+ some other random stuff.'} />\n      <div className={'blog-grid'}>\n        {posts.map(({ node }, index) => {\n          const {\n            frontmatter: { title, description, date },\n            fields: { slug },\n          } = node\n          return <PostCard key={index} index={index} slug={slug} title={title} description={description} date={date} />\n        })}\n      </div>\n      <div className={'pagination'}>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\" aria-label=\"Previous page\">\n            ← Prev\n          </Link>\n        )}\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\" aria-label=\"Next page\">\n            Next →\n          </Link>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query blog($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}