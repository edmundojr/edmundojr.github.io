{"version":3,"sources":["webpack:///./src/pages/reading.js"],"names":["Books","posed","div","enter","delay","staggerChildren","transition","type","stiffness","damping","initialPose","__webpack_exports__","_ref","data","_useState","useState","visible","setVisible","useEffect","books","allGoodreadsBook","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","description","className","pose","map","_ref2","node","Book","props","key","book","bookID","BookContent","opacity","y","scale","rotateX","init","_ref3","shelfNames","_props$book","titleWithoutSeries","imageUrl","authors","src","alt","style","backgroundImage","name","query"],"mappings":"sNAMMA,EAAQC,IAAMC,IAAI,CACtBC,MAAO,CACLC,MAAO,IACPC,gBAAiB,GACjBC,WAAY,CAAEC,KAAM,SAAUC,UAAW,IAAKC,QAAS,KAEzDC,YAAa,SAGAC,EAAA,iBAAAC,GAAe,IAAZC,EAAWD,EAAXC,KAAWC,EACGC,oBAAS,GAAhCC,EADoBF,EAAA,GACXG,EADWH,EAAA,GAE3BI,oBAAU,WAER,OADAD,GAAW,GACJ,kBAAMA,GAAW,KACvB,IALwB,IAOEE,EACzBN,EADFO,iBAAoBC,MAEtB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAO,uCACfL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMlB,KAAM,QAASoB,MAAO,qCAAsCC,YAAa,yBAC/EN,EAAAC,EAAAC,cAAA,QAAMK,UAAW,mBACfP,EAAAC,EAAAC,cAACxB,EAAD,CAAO6B,UAAW,UAAWC,KAAMd,EAAU,QAAU,QACpDG,EAAMY,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTX,EAAAC,EAAAC,cAACU,EAAD,CAAMC,MAAOF,EAAMG,IAAKH,EAAKI,KAAKC,eAQ9C,IAAMC,EAActC,IAAMC,IAAI,CAC5BC,MAAO,CACLqC,QAAS,EACTC,EAAG,EACHC,MAAO,EACPC,QAAS,GAEXC,KAAM,CACJJ,QAAS,EACTC,EAAG,IACHC,MAAO,GACPC,SAAU,MAIRT,EAAO,SAACW,GAAe,IAAbV,EAAYU,EAAZV,MAEZW,EAEEX,EAFFW,WAFwBC,EAItBZ,EADFE,KAAQW,EAHgBD,EAGhBC,mBAAoBC,EAHJF,EAGIE,SAAUC,EAHdH,EAGcG,QAExC,OACE5B,EAAAC,EAAAC,cAACe,EAAD,CAAaV,UAAW,aAAoBiB,GAC1CxB,EAAAC,EAAAC,cAAA,OAAK2B,IAAKF,EAAUpB,UAAW,uBAAwBuB,IAAKJ,IAC5D1B,EAAAC,EAAAC,cAAA,OAAKK,UAAW,gBACdP,EAAAC,EAAAC,cAAA,MAAIK,UAAW,sBAAuBmB,GACtC1B,EAAAC,EAAAC,cAAA,OAAKK,UAAW,uBACdP,EAAAC,EAAAC,cAAA,UACE6B,MAAO,CACLC,gBAAiB,OAASJ,EAAQ,GAAGD,SAAW,KAElDpB,UAAW,wCAEbP,EAAAC,EAAAC,cAAA,kBAAa0B,EAAQ,GAAGK,UAOrBC,EAAK","file":"component---src-pages-reading-js-0a20a3807d69d6bd71e1.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport posed from 'react-pose'\nimport { Hero, Layout } from '../components'\n\nconst Books = posed.div({\n  enter: {\n    delay: 100,\n    staggerChildren: 25,\n    transition: { type: 'spring', stiffness: 100, damping: 15 },\n  },\n  initialPose: 'exit',\n});\n\nexport default ({ data }) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(true)\n    return () => setVisible(false)\n  }, [])\n  const {\n    allGoodreadsBook: { edges: books },\n  } = data\n  return (\n    <Layout>\n      <Helmet title={\"From the library of Edmundo Santos\"} />\n      <Hero type={'large'} title={'From the library of Edmundo Santos'} description={'Designer & Book Nerd'} />\n      <main className={'container-fluid'}>\n        <Books className={'reading'} pose={visible ? 'enter' : 'exit'}>\n          {books.map(({ node }) => (\n            <Book props={node} key={node.book.bookID} />\n          ))}\n        </Books>\n      </main>\n    </Layout>\n  )\n}\n\nconst BookContent = posed.div({\n  enter: {\n    opacity: 1,\n    y: 0,\n    scale: 1,\n    rotateX: 0,\n  },\n  init: {\n    opacity: 0,\n    y: 100,\n    scale: 0.9,\n    rotateX: -25,\n  },\n})\n\nconst Book = ({ props }) => {\n  const {\n    shelfNames,\n    book: { titleWithoutSeries, imageUrl, authors },\n  } = props\n  return (\n    <BookContent className={'book' + ' book-' + shelfNames}>\n      <img src={imageUrl} className={'book-cover img-fluid'} alt={titleWithoutSeries} />\n      <div className={'book-details'}>\n        <h4 className={'book-details-title'}>{titleWithoutSeries}</h4>\n        <div className={'book-details-author'}>\n          <figure\n            style={{\n              backgroundImage: 'url(' + authors[0].imageUrl + ')',\n            }}\n            className={'book-details-author-image img-fluid'}\n          />\n          <figcaption>{authors[0].name}</figcaption>\n        </div>\n      </div>\n    </BookContent>\n  )\n}\n\nexport const query = graphql`\n  query LibraryQuery {\n    allGoodreadsBook(\n      filter: { shelfNames: { in: [\"currently-reading\", \"read\"] } }\n      sort: { fields: [shelfNames, review___dateUpdated], order: ASC }\n    ) {\n      edges {\n        node {\n          shelfNames\n          review {\n            dateUpdated\n          }\n          book {\n            bookID\n            titleWithoutSeries\n            imageUrl\n            authors {\n              name\n              imageUrl\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}