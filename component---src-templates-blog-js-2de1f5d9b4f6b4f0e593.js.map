{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Main","posed","div","enter","delay","staggerChildren","transition","type","stiffness","damping","initialPose","__webpack_exports__","_ref","data","pageContext","_useState","useState","visible","setVisible","useEffect","posts","allMarkdownRemark","edges","page","currentPage","numPages","prevPage","toString","nextPage","isFirst","isLast","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_6__","title","description","className","pose","map","_ref2","index","node","_node$frontmatter","frontmatter","date","slug","fields","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","rel","aria-label","query"],"mappings":"mOAMMA,EAAOC,IAAMC,IAAI,CACrBC,MAAO,CACLC,MAAO,IACPC,gBAAiB,GACjBC,WAAY,CAAEC,KAAM,SAAUC,UAAW,IAAKC,QAAS,KAEzDC,YAAa,SAGAC,EAAA,iBAAAC,GAA4B,IAAzBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YAAkBC,EACVC,oBAAS,GAAhCC,EADiCF,EAAA,GACxBG,EADwBH,EAAA,GAExCI,oBAAU,WAER,OADAD,GAAW,GACJ,kBAAMA,GAAW,KACvB,IALqC,IAOVE,EAC1BP,EADFQ,kBAAqBC,MAEFC,EAAmBT,EAAhCU,YAAmBC,EAAaX,EAAbW,SACrBC,EAAWH,EAAO,GAAM,EAAI,UAAYA,EAAO,GAAGI,WAClDC,EAAW,UAAYL,EAAO,GAAGI,WACjCE,EAAmB,IAATN,EACVO,EAASP,IAASE,EAExB,OACEM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQC,MAAO,8DACfL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAME,MAAO,sDAAuDC,YAAa,+BACjFN,EAAAC,EAAAC,cAACjC,EAAD,CAAMsC,UAAW,YAAaC,KAAMtB,EAAU,QAAU,QACrDG,EAAMoB,IAAI,SAAAC,EAAWC,GAAW,IAAnBC,EAAkBF,EAAlBE,KAAkBC,EAI1BD,EAFFE,YAAeT,EAFaQ,EAEbR,MAAOC,EAFMO,EAENP,YAAaS,EAFPF,EAEOE,KACzBC,EACRJ,EADFK,OAAUD,KAEZ,OAAOhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUe,IAAKP,EAAOA,MAAOA,EAAOK,KAAMA,EAAMX,MAAOA,EAAOC,YAAaA,EAAaS,KAAMA,OAGzGf,EAAAC,EAAAC,cAAA,OAAKK,UAAW,eACZT,GACAE,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAIzB,EAAU0B,IAAI,OAAOC,aAAW,iBAA1C,WAIAvB,GACAC,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAMC,GAAIvB,EAAUwB,IAAI,OAAOC,aAAW,aAA1C,aASH,IAAMC,EAAK","file":"component---src-templates-blog-js-2de1f5d9b4f6b4f0e593.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { Hero, Layout, PostCard } from '../components'\nimport posed from 'react-pose'\nimport { Helmet } from 'react-helmet'\n\nconst Main = posed.div({\n  enter: {\n    delay: 100,\n    staggerChildren: 75,\n    transition: { type: 'spring', stiffness: 100, damping: 15 },\n  },\n  initialPose: 'exit',\n})\n\nexport default ({ data, pageContext }) => {\n  const [visible, setVisible] = useState(false)\n  useEffect(() => {\n    setVisible(true)\n    return () => setVisible(false)\n  }, [])\n  const {\n    allMarkdownRemark: { edges: posts },\n  } = data\n  const { currentPage: page, numPages } = pageContext\n  const prevPage = page - 1 === 1 ? '/blog/' : (page - 1).toString()\n  const nextPage = '/blog/' + (page + 1).toString()\n  const isFirst = page === 1\n  const isLast = page === numPages\n\n  return (\n    <Layout>\n      <Helmet title={\"Articles about design and code · Edmundo Santos, Designer\"} />\n      <Hero title={'Exploring ideas about design, code, and technology.'} description={'+ some other random stuff.'} />\n      <Main className={'blog-grid'} pose={visible ? 'enter' : 'exit'}>\n        {posts.map(({ node }, index) => {\n          const {\n            frontmatter: { title, description, date },\n            fields: { slug },\n          } = node\n          return <PostCard key={index} index={index} slug={slug} title={title} description={description} date={date} />\n        })}\n      </Main>\n      <div className={'pagination'}>\n        {!isFirst && (\n          <Link to={prevPage} rel=\"prev\" aria-label=\"Previous page\">\n            ← Prev\n          </Link>\n        )}\n        {!isLast && (\n          <Link to={nextPage} rel=\"next\" aria-label=\"Next page\">\n            Next →\n          </Link>\n        )}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query blog($limit: Int!, $skip: Int!) {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }, limit: $limit, skip: $skip) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}