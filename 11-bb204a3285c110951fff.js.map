{"version":3,"sources":["webpack:///./node_modules/@sentry/types/esm/severity.js","webpack:///./node_modules/@sentry/types/esm/status.js","webpack:///./node_modules/@sentry/minimal/esm/index.js","webpack:///./node_modules/@sentry/core/esm/integrations/functiontostring.js","webpack:///./node_modules/@sentry/utils/esm/string.js","webpack:///./node_modules/@sentry/core/esm/integrations/inboundfilters.js","webpack:///./node_modules/@sentry/utils/esm/polyfill.js","webpack:///./node_modules/@sentry/utils/esm/error.js","webpack:///./node_modules/@sentry/core/esm/dsn.js","webpack:///./node_modules/@sentry/core/esm/api.js","webpack:///./node_modules/@sentry/core/esm/integration.js","webpack:///./node_modules/@sentry/core/esm/baseclient.js","webpack:///./node_modules/@sentry/core/esm/transports/noop.js","webpack:///./node_modules/@sentry/core/esm/basebackend.js","webpack:///./node_modules/@sentry/utils/esm/supports.js","webpack:///./node_modules/@sentry/browser/esm/tracekit.js","webpack:///./node_modules/@sentry/browser/esm/parsers.js","webpack:///./node_modules/@sentry/utils/esm/promisebuffer.js","webpack:///./node_modules/@sentry/browser/esm/transports/base.js","webpack:///./node_modules/@sentry/browser/esm/transports/fetch.js","webpack:///./node_modules/@sentry/browser/esm/transports/xhr.js","webpack:///./node_modules/@sentry/browser/esm/backend.js","webpack:///./node_modules/@sentry/browser/esm/version.js","webpack:///./node_modules/@sentry/browser/esm/client.js","webpack:///./node_modules/@sentry/browser/esm/helpers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/trycatch.js","webpack:///./node_modules/@sentry/browser/esm/integrations/breadcrumbs.js","webpack:///./node_modules/@sentry/browser/esm/integrations/globalhandlers.js","webpack:///./node_modules/@sentry/browser/esm/integrations/linkederrors.js","webpack:///./node_modules/@sentry/browser/esm/integrations/useragent.js","webpack:///./node_modules/@sentry/browser/esm/sdk.js","webpack:///./node_modules/@sentry/core/esm/sdk.js","webpack:///./node_modules/@sentry/browser/esm/index.js","webpack:///./node_modules/@sentry/hub/esm/hub.js","webpack:///./node_modules/@sentry/hub/esm/scope.js","webpack:///./node_modules/@sentry/hub/esm/span.js","webpack:///./node_modules/@sentry/utils/esm/is.js","webpack:///./node_modules/core-js/modules/es6.date.to-json.js","webpack:///./node_modules/core-js/modules/es6.number.is-nan.js","webpack:///./node_modules/core-js/modules/es6.object.define-properties.js","webpack:///./node_modules/@sentry/utils/esm/misc.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./node_modules/@sentry/utils/esm/memo.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/core-js/modules/es6.typed.uint16-array.js","webpack:///./node_modules/@sentry/utils/esm/logger.js","webpack:///./node_modules/@sentry/utils/esm/syncpromise.js","webpack:///./node_modules/@sentry/utils/esm/object.js"],"names":["Severity","Status","fromString","level","Debug","Info","Warning","Error","Fatal","Critical","Log","fromHttpCode","code","Success","RateLimit","Invalid","Failed","Unknown","callOnHub","method","args","_i","arguments","length","hub","Object","esm_hub","apply","tslib_es6","captureException","exception","syntheticException","originalException","captureMessage","message","captureEvent","event","configureScope","callback","addBreadcrumb","breadcrumb","setContext","name","context","setExtras","extras","setTags","tags","setExtra","key","extra","setTag","value","setUser","user","withScope","originalFunctionToString","FunctionToString","this","id","prototype","setupOnce","Function","toString","__sentry__","__sentry_original__","truncate","str","max","substr","safeJoin","input","delimiter","Array","isArray","output","i","push","String","e","join","keysToEventMessage","keys","maxLength","includedKeys","serialized","slice","isMatchingPattern","pattern","is","test","includes","DEFAULT_IGNORE_ERRORS","inboundfilters_InboundFilters","InboundFilters","_options","esm_scope","self","getIntegration","client","getClient","clientOptions","getOptions","options","_mergeOptions","_shouldDropEvent","_isSentryError","logger","warn","misc","_isIgnoredError","_isBlacklistedUrl","_getEventFilterUrl","_isWhitelistedUrl","ignoreInternal","values","type","_oO","ignoreErrors","_getPossibleEventMessages","some","blacklistUrls","url","whitelistUrls","_a","oO","error","stacktrace","frames_1","frames","filename","frames_2","setPrototypeOf","__proto__","obj","proto","prop","hasOwnProperty","error_SentryError","_super","SentryError","_newTarget","constructor","_this","call","DSN_REGEX","dsn_Dsn","Dsn","from","_fromString","_fromComponents","_validate","withPassword","host","path","pass","port","projectId","protocol","match","exec","_b","_c","split","pop","assign","components","forEach","component","Number","isNaN","parseInt","api_API","API","dsn","_dsnObject","getDsn","getStoreEndpoint","_getBaseUrl","getStoreEndpointPath","getStoreEndpointWithUrlEncodedAuth","auth","sentry_key","sentry_version","object","getRequestHeaders","clientName","clientVersion","header","Date","getTime","Content-Type","X-Sentry-Auth","getReportDialogEndpoint","dialogOptions","endpoint","encodedOptions","encodeURIComponent","email","installedIntegrations","setupIntegrations","integrations","defaultIntegrations","userIntegrations","userIntegrationsNames_1","map","pickedIntegrationsNames_1","defaultIntegration","indexOf","userIntegration","getIntegrationsToSetup","integration","log","setupIntegration","baseclient_BaseClient","BaseClient","backendClass","_integrations","_processing","_backend","_dsn","_isEnabled","hint","scope","eventId","event_id","_getBackend","eventFromException","then","_processEvent","finalEvent","reason","eventFromMessage","flush","timeout","_isClientProcessing","status","clearInterval","interval","getTransport","close","transportFlushed","ready","result","enabled","getIntegrations","Promise","resolve","ticked","setInterval","undefined","_prepareEvent","environment","release","dist","maxValueLength","prepared","request","_addIntegrations","sdk","syncpromise","applyToEvent","sdkInfo","integrationsArray","beforeSend","sampleRate","Math","random","reject","data","sendEvent","beforeSendResult","_handleAsyncBeforeSend","processedEvent","noop_NoopTransport","NoopTransport","_","Skipped","basebackend_BaseBackend","BaseBackend","_transport","_setupTransport","_exception","_hint","_message","_level","supportsFetch","Headers","Request","Response","supportsReferrerPolicy","referrerPolicy","tracekit_window","TraceKit","_report","_collectWindowErrors","_computeStackTrace","_linesOfContext","UNKNOWN_FUNCTION","ERROR_TYPES_RE","_has","getLocationHref","document","location","href","_oldOnerrorHandler","_onErrorHandlerInstalled","handlers","lastException","lastExceptionStack","_notifyHandlers","stack","isWindowError","inner","_traceKitWindowOnError","lineNo","columnNo","errorObj","_augmentStackTraceWithInitialElement","processLastException","mechanism","line","column","msg","groups","func","mode","_traceKitWindowOnUnhandledRejection","err","_lastExceptionStack","_lastException","ex","setTimeout","incomplete","_subscribe","handler","_installGlobalHandler","onerror","_installGlobalUnhandledRejectionHandler","onunhandledrejection","_computeStackTraceFromStackProp","submatch","parts","element","chrome","gecko","winjs","geckoEval","chromeEval","lines","reference","j","isNative","columnNumber","stackInfo","initial","unshift","partial","_computeStackTraceByWalkingCallerChain","depth","item","functionName","funcs","recursion","curr","caller","substring","splice","sourceURL","fileName","lineNumber","description","computeStackTrace","opera10Regex","opera11Regex","_computeStackTraceFromStacktraceProp","lineRE1","lineRE2","lineRE3","scripts","getElementsByTagName","inlineScriptBlocks","s","src","replace","_computeStackTraceFromOperaMultiLineMessage","original","tracekit_subscribe","tracekit_installGlobalHandler","tracekit_installGlobalUnhandledRejectionHandler","STACKTRACE_LIMIT","exceptionFromStacktrace","prepareFramesForEvent","eventFromStacktrace","localStack","firstFrameFunction","lastFrameFunction","frame","colno","function","in_app","lineno","reverse","promisebuffer_PromiseBuffer","PromiseBuffer","_limit","_buffer","isReady","add","task","remove","drain","capturedSetTimeout","all","clearTimeout","base_BaseTransport","BaseTransport","fetch_global","fetch_FetchTransport","FetchTransport","defaultOptions","body","JSON","stringify","fetch","response","xhr_XHRTransport","XHRTransport","XMLHttpRequest","onreadystatechange","readyState","open","send","backend_BrowserBackend","BrowserBackend","transportOptions","transport","_buildEvent","domException","name_1","message_1","messageEvent","exceptionKeys","sort","__serialized__","eventFromPlainObject","handled","synthetic","stringException","attachStacktrace","SDK_NAME","client_BrowserClient","BrowserClient","platform","packages","version","showReportDialog","script","createElement","async","onLoad","onload","head","appendChild","keypressTimeout","lastCapturedEvent","debounceDuration","ignoreOnError","wrap","fn","before","__sentry_wrapped__","sentryWrapped","wrappedArguments","arg","handleEvent","addEventProcessor","property","defineProperty","enumerable","defineProperties","getOwnPropertyDescriptor","configurable","get","debounceTimer","breadcrumbEventHandler","eventName","debounce","captureBreadcrumb","target","_htmlTreeAsString","category","keypressEventHandler","tagName","isContentEditable","elem","nextStr","currentElem","out","height","len","sepLength","_htmlElementAsString","parentNode","className","classes","attr","toLowerCase","attrWhitelist","getAttribute","trycatch_TryCatch","TryCatch","_ignoreOnError","_wrapTimeFunction","originalCallback","getFunctionName","_wrapRAF","_wrapEventTarget","global","bind","lastHref","breadcrumbs_global","breadcrumbs_Breadcrumbs","Breadcrumbs","console","dom","history","sentry","xhr","_instrumentConsole","originalConsoleLevel","breadcrumbData","_instrumentDOM","addEventListener","innerOriginal","_instrumentFetch","isNativeFunc","doc","sandbox","hidden","contentWindow","removeChild","supportsNativeFetch","originalFetch","fetchInput","filterUrl","addSentryBreadcrumb","fetchData","toUpperCase","status_code","_instrumentHistory","isChromePackagedApp","app","runtime","hasHistoryApi","pushState","replaceState","captureUrlChange","to","parsedLoc","parsedTo","parsedFrom","relative","oldOnPopState","onpopstate","currentHref","historyReplacementFunction","originalHistoryFunction","_instrumentXHR","xhrproto","originalOpen","__sentry_xhr__","__sentry_own_request__","originalSend","onreadystatechangeHandler","wrapProp","serializedData","event_1","parse","globalhandlers_GlobalHandlers","GlobalHandlers","stackTraceLimit","_eventFromGlobalHandler","_eventFromIncompleteRejection","fallbackValue","fallbackType","DEFAULT_KEY","DEFAULT_LIMIT","linkederrors_LinkedErrors","LinkedErrors","_key","limit","_handler","linkedErrors","_walkErrorTree","useragent_global","useragent_UserAgent","UserAgent","navigator","headers","userAgent","sdk_defaultIntegrations","integrations_namespaceObject","init","window_1","SENTRY_RELEASE","clientClass","debug","enable","bindClient","initAndBind","lastEventId","forceLoad","sdk_close","sdk_wrap","__webpack_require__","d","__webpack_exports__","INTEGRATIONS","span","transports_namespaceObject","windowIntegrations","_window","Sentry","Integrations","esm_integrations_namespaceObject","module","Hub","getCurrentHub","getHubFromCarrier","tslib__WEBPACK_IMPORTED_MODULE_0__","_sentry_utils__WEBPACK_IMPORTED_MODULE_1__","_sentry_utils__WEBPACK_IMPORTED_MODULE_2__","_scope__WEBPACK_IMPORTED_MODULE_3__","API_VERSION","_version","_stack","_invokeClient","top","getStackTop","isOlderThan","pushScope","getStack","parentScope","clone","popScope","getScope","_lastEventId","finalHint","beforeBreadcrumb","maxBreadcrumbs","timestamp","mergedBreadcrumb","finalBreadcrumb","min","run","oldHub","makeMain","traceHeaders","getSpan","sentry-trace","toTraceparent","getMainCarrier","carrier","__SENTRY__","registry","setHubOnCarrier","hasHubOnCarrier","activeDomain","active","registryHubTopStack","_Oo","Scope","addGlobalEventProcessor","tslib__WEBPACK_IMPORTED_MODULE_8__","_sentry_utils__WEBPACK_IMPORTED_MODULE_9__","_sentry_utils__WEBPACK_IMPORTED_MODULE_10__","_sentry_utils__WEBPACK_IMPORTED_MODULE_11__","_sentry_utils__WEBPACK_IMPORTED_MODULE_12__","_span__WEBPACK_IMPORTED_MODULE_13__","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_context","addScopeListener","_notifyScopeListeners","_notifyEventProcessors","processors","index","processor","_final","setFingerprint","fingerprint","_fingerprint","setLevel","setTransaction","transaction","_transaction","setSpan","_span","startSpan","parentSpan","setParent","newScope","clear","clearBreadcrumbs","_applyFingerprint","concat","contexts","trace","breadcrumbs","getGlobalEventProcessors","globalEventProcessors","Span","TRACEPARENT_REGEXP","_traceId","_spanId","_sampled","_parent","parent","setSampled","sampled","fromTraceparent","traceparent","matches","parent_1","toJSON","span_id","trace_id","isError","isErrorEvent","isDOMError","isDOMException","isString","isPrimitive","isPlainObject","isRegExp","isThenable","isSyntheticEvent","wat","Boolean","$export","toObject","toPrimitive","P","F","NaN","toISOString","O","pv","isFinite","S","number","process","dynamicRequire","getGlobalObject","uuid4","parseUrl","getEventDescription","consoleSandbox","addExceptionTypeValue","mod","require","fallbackGlobalObject","window","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","c","r","query","fragment","originalConsole","wrappedLevels","exports","originalModule","webpackPolyfill","create","children","l","Memo","_hasWeakSet","WeakSet","_inner","memoize","has","unmemoize","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","array","noop","nextTick","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","byteOffset","_misc__WEBPACK_IMPORTED_MODULE_0__","PREFIX","Logger","_enabled","disable","SyncPromise","States","_is__WEBPACK_IMPORTED_MODULE_4__","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","REJECTED","state","_value","_executeHandlers","h","onFail","onSuccess","_attachHandler","onfulfilled","onrejected","val","fill","urlEncode","normalizeToSize","normalize","_is__WEBPACK_IMPORTED_MODULE_14__","_memo__WEBPACK_IMPORTED_MODULE_15__","source","replacement","wrapped","jsonSize","encodeURI","utf8Length","maxSize","normalizeValue","_events","Event","getPrototypeOf","walk","memo","Infinity","normalized","serializeValue","objectifyError","acc","innerKey"],"mappings":"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","file":"11-bb204a3285c110951fff.js","sourcesContent":["/** JSDoc */\nexport var Severity;\n\n(function (Severity) {\n  /** JSDoc */\n  Severity[\"Fatal\"] = \"fatal\";\n  /** JSDoc */\n\n  Severity[\"Error\"] = \"error\";\n  /** JSDoc */\n\n  Severity[\"Warning\"] = \"warning\";\n  /** JSDoc */\n\n  Severity[\"Log\"] = \"log\";\n  /** JSDoc */\n\n  Severity[\"Info\"] = \"info\";\n  /** JSDoc */\n\n  Severity[\"Debug\"] = \"debug\";\n  /** JSDoc */\n\n  Severity[\"Critical\"] = \"critical\";\n})(Severity || (Severity = {})); // tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n\n\n(function (Severity) {\n  /**\n   * Converts a string-based level into a {@link Severity}.\n   *\n   * @param level string representation of Severity\n   * @returns Severity\n   */\n  function fromString(level) {\n    switch (level) {\n      case 'debug':\n        return Severity.Debug;\n\n      case 'info':\n        return Severity.Info;\n\n      case 'warn':\n      case 'warning':\n        return Severity.Warning;\n\n      case 'error':\n        return Severity.Error;\n\n      case 'fatal':\n        return Severity.Fatal;\n\n      case 'critical':\n        return Severity.Critical;\n\n      case 'log':\n      default:\n        return Severity.Log;\n    }\n  }\n\n  Severity.fromString = fromString;\n})(Severity || (Severity = {}));","/** The status of an event. */\nexport var Status;\n\n(function (Status) {\n  /** The status could not be determined. */\n  Status[\"Unknown\"] = \"unknown\";\n  /** The event was skipped due to configuration or callbacks. */\n\n  Status[\"Skipped\"] = \"skipped\";\n  /** The event was sent to Sentry successfully. */\n\n  Status[\"Success\"] = \"success\";\n  /** The client is currently rate limited and will try again later. */\n\n  Status[\"RateLimit\"] = \"rate_limit\";\n  /** The event could not be processed. */\n\n  Status[\"Invalid\"] = \"invalid\";\n  /** A server-side error ocurred during submission. */\n\n  Status[\"Failed\"] = \"failed\";\n})(Status || (Status = {})); // tslint:disable:completed-docs\n// tslint:disable:no-unnecessary-qualifier no-namespace\n\n\n(function (Status) {\n  /**\n   * Converts a HTTP status code into a {@link Status}.\n   *\n   * @param code The HTTP response status code.\n   * @returns The send status or {@link Status.Unknown}.\n   */\n  function fromHttpCode(code) {\n    if (code >= 200 && code < 300) {\n      return Status.Success;\n    }\n\n    if (code === 429) {\n      return Status.RateLimit;\n    }\n\n    if (code >= 400 && code < 500) {\n      return Status.Invalid;\n    }\n\n    if (code >= 500) {\n      return Status.Failed;\n    }\n\n    return Status.Unknown;\n  }\n\n  Status.fromHttpCode = fromHttpCode;\n})(Status || (Status = {}));","import * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/hub';\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n\nfunction callOnHub(method) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  var hub = getCurrentHub();\n\n  if (hub && hub[method]) {\n    // tslint:disable-next-line:no-unsafe-any\n    return hub[method].apply(hub, tslib_1.__spread(args));\n  }\n\n  throw new Error(\"No hub defined or \" + method + \" was not found on the hub, please open a bug report.\");\n}\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n\n\nexport function captureException(exception) {\n  var syntheticException;\n\n  try {\n    throw new Error('Sentry syntheticException');\n  } catch (exception) {\n    syntheticException = exception;\n  }\n\n  return callOnHub('captureException', exception, {\n    originalException: exception,\n    syntheticException: syntheticException\n  });\n}\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\n\nexport function captureMessage(message, level) {\n  var syntheticException;\n\n  try {\n    throw new Error(message);\n  } catch (exception) {\n    syntheticException = exception;\n  }\n\n  return callOnHub('captureMessage', message, level, {\n    originalException: message,\n    syntheticException: syntheticException\n  });\n}\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\n\nexport function captureEvent(event) {\n  return callOnHub('captureEvent', event);\n}\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\n\nexport function configureScope(callback) {\n  callOnHub('configureScope', callback);\n}\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\n\nexport function addBreadcrumb(breadcrumb) {\n  callOnHub('addBreadcrumb', breadcrumb);\n}\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normailzed.\n */\n\nexport function setContext(name, context) {\n  callOnHub('setContext', name, context);\n}\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\n\nexport function setExtras(extras) {\n  callOnHub('setExtras', extras);\n}\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\n\nexport function setTags(tags) {\n  callOnHub('setTags', tags);\n}\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normailzed.\n */\n\nexport function setExtra(key, extra) {\n  callOnHub('setExtra', key, extra);\n}\n/**\n * Set key:value that will be sent as tags data with the event.\n * @param key String key of tag\n * @param value String value of tag\n */\n\nexport function setTag(key, value) {\n  callOnHub('setTag', key, value);\n}\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\n\nexport function setUser(user) {\n  callOnHub('setUser', user);\n}\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\n\nexport function withScope(callback) {\n  callOnHub('withScope', callback);\n}\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n */\n\nexport function _callOnClient(method) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  callOnHub.apply(void 0, tslib_1.__spread(['_invokeClient', method], args));\n}","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nvar originalFunctionToString;\n/** Patch toString calls to return proper name for wrapped functions */\n\nvar FunctionToString =\n/** @class */\nfunction () {\n  function FunctionToString() {\n    /**\n     * @inheritDoc\n     */\n    this.name = FunctionToString.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  FunctionToString.prototype.setupOnce = function () {\n    originalFunctionToString = Function.prototype.toString;\n\n    Function.prototype.toString = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var context = this.__sentry__ ? this.__sentry_original__ : this; // tslint:disable-next-line:no-unsafe-any\n\n      return originalFunctionToString.apply(context, args);\n    };\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  FunctionToString.id = 'FunctionToString';\n  return FunctionToString;\n}();\n\nexport { FunctionToString };","import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.is-array\";\nimport { isRegExp } from './is';\n/**\n * Truncates given string to the maximum characters count\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\n\nexport function truncate(str, max) {\n  if (max === void 0) {\n    max = 0;\n  } // tslint:disable-next-line:strict-type-predicates\n\n\n  if (typeof str !== 'string' || max === 0) {\n    return str;\n  }\n\n  return str.length <= max ? str : str.substr(0, max) + \"...\";\n}\n/**\n * This is basically just `trim_line` from\n * https://github.com/getsentry/sentry/blob/master/src/sentry/lang/javascript/processor.py#L67\n *\n * @param str An object that contains serializable values\n * @param max Maximum number of characters in truncated string\n * @returns string Encoded\n */\n\nexport function snipLine(line, colno) {\n  var newLine = line;\n  var ll = newLine.length;\n\n  if (ll <= 150) {\n    return newLine;\n  }\n\n  if (colno > ll) {\n    colno = ll; // tslint:disable-line:no-parameter-reassignment\n  }\n\n  var start = Math.max(colno - 60, 0);\n\n  if (start < 5) {\n    start = 0;\n  }\n\n  var end = Math.min(start + 140, ll);\n\n  if (end > ll - 5) {\n    end = ll;\n  }\n\n  if (end === ll) {\n    start = Math.max(end - 140, 0);\n  }\n\n  newLine = newLine.slice(start, end);\n\n  if (start > 0) {\n    newLine = \"'{snip} \" + newLine;\n  }\n\n  if (end < ll) {\n    newLine += ' {snip}';\n  }\n\n  return newLine;\n}\n/**\n * Join values in array\n * @param input array of values to be joined together\n * @param delimiter string to be placed in-between values\n * @returns Joined values\n */\n\nexport function safeJoin(input, delimiter) {\n  if (!Array.isArray(input)) {\n    return '';\n  }\n\n  var output = []; // tslint:disable-next-line:prefer-for-of\n\n  for (var i = 0; i < input.length; i++) {\n    var value = input[i];\n\n    try {\n      output.push(String(value));\n    } catch (e) {\n      output.push('[value cannot be serialized]');\n    }\n  }\n\n  return output.join(delimiter);\n}\n/** Merges provided array of keys into */\n\nexport function keysToEventMessage(keys, maxLength) {\n  if (maxLength === void 0) {\n    maxLength = 40;\n  }\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (var includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    var serialized = keys.slice(0, includedKeys).join(', ');\n\n    if (serialized.length > maxLength) {\n      continue;\n    }\n\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n/**\n * Checks if the value matches a regex or includes the string\n * @param value The string value to be checked against\n * @param pattern Either a regex or a string that must be contained in value\n */\n\nexport function isMatchingPattern(value, pattern) {\n  if (isRegExp(pattern)) {\n    return pattern.test(value);\n  }\n\n  if (typeof pattern === 'string') {\n    return value.includes(pattern);\n  }\n\n  return false;\n}","import \"core-js/modules/es6.array.some\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { getEventDescription, isMatchingPattern, logger } from '@sentry/utils'; // \"Script error.\" is hard coded into browsers for errors that it can't read.\n// this is the result of a script being pulled in from an external domain and CORS.\n\nvar DEFAULT_IGNORE_ERRORS = [/^Script error\\.?$/, /^Javascript error: Script error\\.? on line 0$/];\n/** Inbound filters configurable by the user */\n\nvar InboundFilters =\n/** @class */\nfunction () {\n  function InboundFilters(_options) {\n    if (_options === void 0) {\n      _options = {};\n    }\n\n    this._options = _options;\n    /**\n     * @inheritDoc\n     */\n\n    this.name = InboundFilters.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  InboundFilters.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event) {\n      var hub = getCurrentHub();\n\n      if (!hub) {\n        return event;\n      }\n\n      var self = hub.getIntegration(InboundFilters);\n\n      if (self) {\n        var client = hub.getClient();\n        var clientOptions = client ? client.getOptions() : {};\n\n        var options = self._mergeOptions(clientOptions);\n\n        if (self._shouldDropEvent(event, options)) {\n          return null;\n        }\n      }\n\n      return event;\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._shouldDropEvent = function (event, options) {\n    if (this._isSentryError(event, options)) {\n      logger.warn(\"Event dropped due to being internal Sentry Error.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n\n    if (this._isIgnoredError(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `ignoreErrors` option.\\nEvent: \" + getEventDescription(event));\n      return true;\n    }\n\n    if (this._isBlacklistedUrl(event, options)) {\n      logger.warn(\"Event dropped due to being matched by `blacklistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n\n    if (!this._isWhitelistedUrl(event, options)) {\n      logger.warn(\"Event dropped due to not being matched by `whitelistUrls` option.\\nEvent: \" + getEventDescription(event) + \".\\nUrl: \" + this._getEventFilterUrl(event));\n      return true;\n    }\n\n    return false;\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isSentryError = function (event, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.ignoreInternal) {\n      return false;\n    }\n\n    try {\n      // tslint:disable-next-line:no-unsafe-any\n      return event.exception.values[0].type === 'SentryError';\n    } catch (_oO) {\n      return false;\n    }\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isIgnoredError = function (event, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.ignoreErrors || !options.ignoreErrors.length) {\n      return false;\n    }\n\n    return this._getPossibleEventMessages(event).some(function (message) {\n      // Not sure why TypeScript complains here...\n      return options.ignoreErrors.some(function (pattern) {\n        return isMatchingPattern(message, pattern);\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isBlacklistedUrl = function (event, options) {\n    if (options === void 0) {\n      options = {};\n    } // TODO: Use Glob instead?\n\n\n    if (!options.blacklistUrls || !options.blacklistUrls.length) {\n      return false;\n    }\n\n    var url = this._getEventFilterUrl(event);\n\n    return !url ? false : options.blacklistUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._isWhitelistedUrl = function (event, options) {\n    if (options === void 0) {\n      options = {};\n    } // TODO: Use Glob instead?\n\n\n    if (!options.whitelistUrls || !options.whitelistUrls.length) {\n      return true;\n    }\n\n    var url = this._getEventFilterUrl(event);\n\n    return !url ? true : options.whitelistUrls.some(function (pattern) {\n      return isMatchingPattern(url, pattern);\n    });\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._mergeOptions = function (clientOptions) {\n    if (clientOptions === void 0) {\n      clientOptions = {};\n    }\n\n    return {\n      blacklistUrls: tslib_1.__spread(this._options.blacklistUrls || [], clientOptions.blacklistUrls || []),\n      ignoreErrors: tslib_1.__spread(this._options.ignoreErrors || [], clientOptions.ignoreErrors || [], DEFAULT_IGNORE_ERRORS),\n      ignoreInternal: typeof this._options.ignoreInternal !== 'undefined' ? this._options.ignoreInternal : true,\n      whitelistUrls: tslib_1.__spread(this._options.whitelistUrls || [], clientOptions.whitelistUrls || [])\n    };\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._getPossibleEventMessages = function (event) {\n    if (event.message) {\n      return [event.message];\n    }\n\n    if (event.exception) {\n      try {\n        // tslint:disable-next-line:no-unsafe-any\n        var _a = event.exception.values[0],\n            type = _a.type,\n            value = _a.value;\n        return [\"\" + value, type + \": \" + value];\n      } catch (oO) {\n        logger.error(\"Cannot extract message for event \" + getEventDescription(event));\n        return [];\n      }\n    }\n\n    return [];\n  };\n  /** JSDoc */\n\n\n  InboundFilters.prototype._getEventFilterUrl = function (event) {\n    try {\n      if (event.stacktrace) {\n        // tslint:disable:no-unsafe-any\n        var frames_1 = event.stacktrace.frames;\n        return frames_1[frames_1.length - 1].filename;\n      }\n\n      if (event.exception) {\n        // tslint:disable:no-unsafe-any\n        var frames_2 = event.exception.values[0].stacktrace.frames;\n        return frames_2[frames_2.length - 1].filename;\n      }\n\n      return null;\n    } catch (oO) {\n      logger.error(\"Cannot extract url for event \" + getEventDescription(event));\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  InboundFilters.id = 'InboundFilters';\n  return InboundFilters;\n}();\n\nexport { InboundFilters };","import \"core-js/modules/es6.object.set-prototype-of\";\nexport var setPrototypeOf = Object.setPrototypeOf || ({\n  __proto__: []\n} instanceof Array ? setProtoOf : mixinProperties); // tslint:disable-line:no-unbound-method\n\n/**\n * setPrototypeOf polyfill using __proto__\n */\n\nfunction setProtoOf(obj, proto) {\n  // @ts-ignore\n  obj.__proto__ = proto;\n  return obj;\n}\n/**\n * setPrototypeOf polyfill using mixin\n */\n\n\nfunction mixinProperties(obj, proto) {\n  for (var prop in proto) {\n    if (!obj.hasOwnProperty(prop)) {\n      // @ts-ignore\n      obj[prop] = proto[prop];\n    }\n  }\n\n  return obj;\n}","import \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { setPrototypeOf } from './polyfill';\n/** An error emitted by Sentry SDKs and related utilities. */\n\nvar SentryError =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(SentryError, _super);\n\n  function SentryError(message) {\n    var _newTarget = this.constructor;\n\n    var _this = _super.call(this, message) || this;\n\n    _this.message = message; // tslint:disable:no-unsafe-any\n\n    _this.name = _newTarget.prototype.constructor.name;\n    setPrototypeOf(_this, _newTarget.prototype);\n    return _this;\n  }\n\n  return SentryError;\n}(Error);\n\nexport { SentryError };","import \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-nan\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport * as tslib_1 from \"tslib\";\nimport { SentryError } from '@sentry/utils';\n/** Regular expression used to parse a Dsn. */\n\nvar DSN_REGEX = /^(?:(\\w+):)\\/\\/(?:(\\w+)(?::(\\w+))?@)([\\w\\.-]+)(?::(\\d+))?\\/(.+)/;\n/** Error message */\n\nvar ERROR_MESSAGE = 'Invalid Dsn';\n/** The Sentry Dsn, identifying a Sentry instance and project. */\n\nvar Dsn =\n/** @class */\nfunction () {\n  /** Creates a new Dsn component */\n  function Dsn(from) {\n    if (typeof from === 'string') {\n      this._fromString(from);\n    } else {\n      this._fromComponents(from);\n    }\n\n    this._validate();\n  }\n  /**\n   * Renders the string representation of this Dsn.\n   *\n   * By default, this will render the public representation without the password\n   * component. To get the deprecated private _representation, set `withPassword`\n   * to true.\n   *\n   * @param withPassword When set to true, the password will be included.\n   */\n\n\n  Dsn.prototype.toString = function (withPassword) {\n    if (withPassword === void 0) {\n      withPassword = false;\n    } // tslint:disable-next-line:no-this-assignment\n\n\n    var _a = this,\n        host = _a.host,\n        path = _a.path,\n        pass = _a.pass,\n        port = _a.port,\n        projectId = _a.projectId,\n        protocol = _a.protocol,\n        user = _a.user;\n\n    return protocol + \"://\" + user + (withPassword && pass ? \":\" + pass : '') + (\"@\" + host + (port ? \":\" + port : '') + \"/\" + (path ? path + \"/\" : path) + projectId);\n  };\n  /** Parses a string into this Dsn. */\n\n\n  Dsn.prototype._fromString = function (str) {\n    var match = DSN_REGEX.exec(str);\n\n    if (!match) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    var _a = tslib_1.__read(match.slice(1), 6),\n        protocol = _a[0],\n        user = _a[1],\n        _b = _a[2],\n        pass = _b === void 0 ? '' : _b,\n        host = _a[3],\n        _c = _a[4],\n        port = _c === void 0 ? '' : _c,\n        lastPath = _a[5];\n\n    var path = '';\n    var projectId = lastPath;\n    var split = projectId.split('/');\n\n    if (split.length > 1) {\n      path = split.slice(0, -1).join('/');\n      projectId = split.pop();\n    }\n\n    Object.assign(this, {\n      host: host,\n      pass: pass,\n      path: path,\n      projectId: projectId,\n      port: port,\n      protocol: protocol,\n      user: user\n    });\n  };\n  /** Maps Dsn components into this instance. */\n\n\n  Dsn.prototype._fromComponents = function (components) {\n    this.protocol = components.protocol;\n    this.user = components.user;\n    this.pass = components.pass || '';\n    this.host = components.host;\n    this.port = components.port || '';\n    this.path = components.path || '';\n    this.projectId = components.projectId;\n  };\n  /** Validates this Dsn and throws on error. */\n\n\n  Dsn.prototype._validate = function () {\n    var _this = this;\n\n    ['protocol', 'user', 'host', 'projectId'].forEach(function (component) {\n      if (!_this[component]) {\n        throw new SentryError(ERROR_MESSAGE);\n      }\n    });\n\n    if (this.protocol !== 'http' && this.protocol !== 'https') {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n\n    if (this.port && Number.isNaN(parseInt(this.port, 10))) {\n      throw new SentryError(ERROR_MESSAGE);\n    }\n  };\n\n  return Dsn;\n}();\n\nexport { Dsn };","import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport { urlEncode } from '@sentry/utils';\nimport { Dsn } from './dsn';\nvar SENTRY_API_VERSION = '7';\n/** Helper class to provide urls to different Sentry endpoints. */\n\nvar API =\n/** @class */\nfunction () {\n  /** Create a new instance of API */\n  function API(dsn) {\n    this.dsn = dsn;\n    this._dsnObject = new Dsn(dsn);\n  }\n  /** Returns the Dsn object. */\n\n\n  API.prototype.getDsn = function () {\n    return this._dsnObject;\n  };\n  /** Returns a string with auth headers in the url to the store endpoint. */\n\n\n  API.prototype.getStoreEndpoint = function () {\n    return \"\" + this._getBaseUrl() + this.getStoreEndpointPath();\n  };\n  /** Returns the store endpoint with auth added in url encoded. */\n\n\n  API.prototype.getStoreEndpointWithUrlEncodedAuth = function () {\n    var dsn = this._dsnObject;\n    var auth = {\n      sentry_key: dsn.user,\n      sentry_version: SENTRY_API_VERSION\n    }; // Auth is intentionally sent as part of query string (NOT as custom HTTP header)\n    // to avoid preflight CORS requests\n\n    return this.getStoreEndpoint() + \"?\" + urlEncode(auth);\n  };\n  /** Returns the base path of the url including the port. */\n\n\n  API.prototype._getBaseUrl = function () {\n    var dsn = this._dsnObject;\n    var protocol = dsn.protocol ? dsn.protocol + \":\" : '';\n    var port = dsn.port ? \":\" + dsn.port : '';\n    return protocol + \"//\" + dsn.host + port;\n  };\n  /** Returns only the path component for the store endpoint. */\n\n\n  API.prototype.getStoreEndpointPath = function () {\n    var dsn = this._dsnObject;\n    return (dsn.path ? \"/\" + dsn.path : '') + \"/api/\" + dsn.projectId + \"/store/\";\n  };\n  /** Returns an object that can be used in request headers. */\n\n\n  API.prototype.getRequestHeaders = function (clientName, clientVersion) {\n    var dsn = this._dsnObject;\n    var header = [\"Sentry sentry_version=\" + SENTRY_API_VERSION];\n    header.push(\"sentry_timestamp=\" + new Date().getTime());\n    header.push(\"sentry_client=\" + clientName + \"/\" + clientVersion);\n    header.push(\"sentry_key=\" + dsn.user);\n\n    if (dsn.pass) {\n      header.push(\"sentry_secret=\" + dsn.pass);\n    }\n\n    return {\n      'Content-Type': 'application/json',\n      'X-Sentry-Auth': header.join(', ')\n    };\n  };\n  /** Returns the url to the report dialog endpoint. */\n\n\n  API.prototype.getReportDialogEndpoint = function (dialogOptions) {\n    if (dialogOptions === void 0) {\n      dialogOptions = {};\n    }\n\n    var dsn = this._dsnObject;\n    var endpoint = \"\" + this._getBaseUrl() + (dsn.path ? \"/\" + dsn.path : '') + \"/api/embed/error-page/\";\n    var encodedOptions = [];\n    encodedOptions.push(\"dsn=\" + dsn.toString());\n\n    for (var key in dialogOptions) {\n      if (key === 'user') {\n        if (!dialogOptions.user) {\n          continue;\n        }\n\n        if (dialogOptions.user.name) {\n          encodedOptions.push(\"name=\" + encodeURIComponent(dialogOptions.user.name));\n        }\n\n        if (dialogOptions.user.email) {\n          encodedOptions.push(\"email=\" + encodeURIComponent(dialogOptions.user.email));\n        }\n      } else {\n        encodedOptions.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(dialogOptions[key]));\n      }\n    }\n\n    if (encodedOptions.length) {\n      return endpoint + \"?\" + encodedOptions.join('&');\n    }\n\n    return endpoint;\n  };\n\n  return API;\n}();\n\nexport { API };","import \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.is-array\";\nimport * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\nexport var installedIntegrations = [];\n/** Gets integration to install */\n\nexport function getIntegrationsToSetup(options) {\n  var defaultIntegrations = options.defaultIntegrations && tslib_1.__spread(options.defaultIntegrations) || [];\n  var userIntegrations = options.integrations;\n  var integrations = [];\n\n  if (Array.isArray(userIntegrations)) {\n    var userIntegrationsNames_1 = userIntegrations.map(function (i) {\n      return i.name;\n    });\n    var pickedIntegrationsNames_1 = []; // Leave only unique default integrations, that were not overridden with provided user integrations\n\n    defaultIntegrations.forEach(function (defaultIntegration) {\n      if (userIntegrationsNames_1.indexOf(defaultIntegration.name) === -1 && pickedIntegrationsNames_1.indexOf(defaultIntegration.name) === -1) {\n        integrations.push(defaultIntegration);\n        pickedIntegrationsNames_1.push(defaultIntegration.name);\n      }\n    }); // Don't add same user integration twice\n\n    userIntegrations.forEach(function (userIntegration) {\n      if (pickedIntegrationsNames_1.indexOf(userIntegration.name) === -1) {\n        integrations.push(userIntegration);\n        pickedIntegrationsNames_1.push(userIntegration.name);\n      }\n    });\n  } else if (typeof userIntegrations === 'function') {\n    integrations = userIntegrations(defaultIntegrations);\n    integrations = Array.isArray(integrations) ? integrations : [integrations];\n  } else {\n    return tslib_1.__spread(defaultIntegrations);\n  }\n\n  return integrations;\n}\n/** Setup given integration */\n\nexport function setupIntegration(integration) {\n  if (installedIntegrations.indexOf(integration.name) !== -1) {\n    return;\n  }\n\n  integration.setupOnce(addGlobalEventProcessor, getCurrentHub);\n  installedIntegrations.push(integration.name);\n  logger.log(\"Integration installed: \" + integration.name);\n}\n/**\n * Given a list of integration instances this installs them all. When `withDefaults` is set to `true` then all default\n * integrations are added unless they were already provided before.\n * @param integrations array of integration instances\n * @param withDefault should enable default integrations\n */\n\nexport function setupIntegrations(options) {\n  var integrations = {};\n  getIntegrationsToSetup(options).forEach(function (integration) {\n    integrations[integration.name] = integration;\n    setupIntegration(integration);\n  });\n  return integrations;\n}","import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport * as tslib_1 from \"tslib\";\nimport { isPrimitive, isThenable, logger, SyncPromise, truncate, uuid4 } from '@sentry/utils';\nimport { Dsn } from './dsn';\nimport { setupIntegrations } from './integration';\n/**\n * Base implementation for all JavaScript SDK clients.\n *\n * Call the constructor with the corresponding backend constructor and options\n * specific to the client subclass. To access these options later, use\n * {@link Client.getOptions}. Also, the Backend instance is available via\n * {@link Client.getBackend}.\n *\n * If a Dsn is specified in the options, it will be parsed and stored. Use\n * {@link Client.getDsn} to retrieve the Dsn at any moment. In case the Dsn is\n * invalid, the constructor will throw a {@link SentryException}. Note that\n * without a valid Dsn, the SDK will not send any events to Sentry.\n *\n * Before sending an event via the backend, it is passed through\n * {@link BaseClient.prepareEvent} to add SDK information and scope data\n * (breadcrumbs and context). To add more custom information, override this\n * method and extend the resulting prepared event.\n *\n * To issue automatically created events (e.g. via instrumentation), use\n * {@link Client.captureEvent}. It will prepare the event and pass it through\n * the callback lifecycle. To issue auto-breadcrumbs, use\n * {@link Client.addBreadcrumb}.\n *\n * @example\n * class NodeClient extends BaseClient<NodeBackend, NodeOptions> {\n *   public constructor(options: NodeOptions) {\n *     super(NodeBackend, options);\n *   }\n *\n *   // ...\n * }\n */\n\nvar BaseClient =\n/** @class */\nfunction () {\n  /**\n   * Initializes this client instance.\n   *\n   * @param backendClass A constructor function to create the backend.\n   * @param options Options for the client.\n   */\n  function BaseClient(backendClass, options) {\n    /** Array of used integrations. */\n    this._integrations = {};\n    /** Is the client still processing a call? */\n\n    this._processing = false;\n    this._backend = new backendClass(options);\n    this._options = options;\n\n    if (options.dsn) {\n      this._dsn = new Dsn(options.dsn);\n    }\n\n    if (this._isEnabled()) {\n      this._integrations = setupIntegrations(this._options);\n    }\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.captureException = function (exception, hint, scope) {\n    var _this = this;\n\n    var eventId = hint && hint.event_id;\n    this._processing = true;\n\n    this._getBackend().eventFromException(exception, hint).then(function (event) {\n      return _this._processEvent(event, hint, scope);\n    }).then(function (finalEvent) {\n      // We need to check for finalEvent in case beforeSend returned null\n      eventId = finalEvent && finalEvent.event_id;\n      _this._processing = false;\n    })[\"catch\"](function (reason) {\n      logger.error(reason);\n      _this._processing = false;\n    });\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.captureMessage = function (message, level, hint, scope) {\n    var _this = this;\n\n    var eventId = hint && hint.event_id;\n    this._processing = true;\n    var promisedEvent = isPrimitive(message) ? this._getBackend().eventFromMessage(\"\" + message, level, hint) : this._getBackend().eventFromException(message, hint);\n    promisedEvent.then(function (event) {\n      return _this._processEvent(event, hint, scope);\n    }).then(function (finalEvent) {\n      // We need to check for finalEvent in case beforeSend returned null\n      eventId = finalEvent && finalEvent.event_id;\n      _this._processing = false;\n    })[\"catch\"](function (reason) {\n      logger.error(reason);\n      _this._processing = false;\n    });\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.captureEvent = function (event, hint, scope) {\n    var _this = this;\n\n    var eventId = hint && hint.event_id;\n    this._processing = true;\n\n    this._processEvent(event, hint, scope).then(function (finalEvent) {\n      // We need to check for finalEvent in case beforeSend returned null\n      eventId = finalEvent && finalEvent.event_id;\n      _this._processing = false;\n    })[\"catch\"](function (reason) {\n      logger.error(reason);\n      _this._processing = false;\n    });\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.getDsn = function () {\n    return this._dsn;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.getOptions = function () {\n    return this._options;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.flush = function (timeout) {\n    var _this = this;\n\n    return this._isClientProcessing(timeout).then(function (status) {\n      clearInterval(status.interval);\n      return _this._getBackend().getTransport().close(timeout).then(function (transportFlushed) {\n        return status.ready && transportFlushed;\n      });\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.close = function (timeout) {\n    var _this = this;\n\n    return this.flush(timeout).then(function (result) {\n      _this.getOptions().enabled = false;\n      return result;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.getIntegrations = function () {\n    return this._integrations || {};\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseClient.prototype.getIntegration = function (integration) {\n    try {\n      return this._integrations[integration.id] || null;\n    } catch (_oO) {\n      logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Client\");\n      return null;\n    }\n  };\n  /** Waits for the client to be done with processing. */\n\n\n  BaseClient.prototype._isClientProcessing = function (timeout) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var ticked = 0;\n      var tick = 1;\n      var interval = 0;\n      clearInterval(interval);\n      interval = setInterval(function () {\n        if (!_this._processing) {\n          resolve({\n            interval: interval,\n            ready: true\n          });\n        } else {\n          ticked += tick;\n\n          if (timeout && ticked >= timeout) {\n            resolve({\n              interval: interval,\n              ready: false\n            });\n          }\n        }\n      }, tick);\n    });\n  };\n  /** Returns the current backend. */\n\n\n  BaseClient.prototype._getBackend = function () {\n    return this._backend;\n  };\n  /** Determines whether this SDK is enabled and a valid Dsn is present. */\n\n\n  BaseClient.prototype._isEnabled = function () {\n    return this.getOptions().enabled !== false && this._dsn !== undefined;\n  };\n  /**\n   * Adds common information to events.\n   *\n   * The information includes release and environment from `options`,\n   * breadcrumbs and context (extra, tags and user) from the scope.\n   *\n   * Information that is already present in the event is never overwritten. For\n   * nested objects, such as the context, keys are merged.\n   *\n   * @param event The original event.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A new event with more information.\n   */\n\n\n  BaseClient.prototype._prepareEvent = function (event, scope, hint) {\n    var _a = this.getOptions(),\n        environment = _a.environment,\n        release = _a.release,\n        dist = _a.dist,\n        _b = _a.maxValueLength,\n        maxValueLength = _b === void 0 ? 250 : _b;\n\n    var prepared = tslib_1.__assign({}, event);\n\n    if (prepared.environment === undefined && environment !== undefined) {\n      prepared.environment = environment;\n    }\n\n    if (prepared.release === undefined && release !== undefined) {\n      prepared.release = release;\n    }\n\n    if (prepared.dist === undefined && dist !== undefined) {\n      prepared.dist = dist;\n    }\n\n    if (prepared.message) {\n      prepared.message = truncate(prepared.message, maxValueLength);\n    }\n\n    var exception = prepared.exception && prepared.exception.values && prepared.exception.values[0];\n\n    if (exception && exception.value) {\n      exception.value = truncate(exception.value, maxValueLength);\n    }\n\n    var request = prepared.request;\n\n    if (request && request.url) {\n      request.url = truncate(request.url, maxValueLength);\n    }\n\n    if (prepared.event_id === undefined) {\n      prepared.event_id = uuid4();\n    }\n\n    this._addIntegrations(prepared.sdk); // We prepare the result here with a resolved Event.\n\n\n    var result = SyncPromise.resolve(prepared); // This should be the last thing called, since we want that\n    // {@link Hub.addEventProcessor} gets the finished prepared event.\n\n    if (scope) {\n      // In case we have a hub we reassign it.\n      result = scope.applyToEvent(prepared, hint);\n    }\n\n    return result;\n  };\n  /**\n   * This function adds all used integrations to the SDK info in the event.\n   * @param sdkInfo The sdkInfo of the event that will be filled with all integrations.\n   */\n\n\n  BaseClient.prototype._addIntegrations = function (sdkInfo) {\n    var integrationsArray = Object.keys(this._integrations);\n\n    if (sdkInfo && integrationsArray.length > 0) {\n      sdkInfo.integrations = integrationsArray;\n    }\n  };\n  /**\n   * Processes an event (either error or message) and sends it to Sentry.\n   *\n   * This also adds breadcrumbs and context information to the event. However,\n   * platform specific meta data (such as the User's IP address) must be added\n   * by the SDK implementor.\n   *\n   *\n   * @param event The event to send to Sentry.\n   * @param hint May contain additional informartion about the original exception.\n   * @param scope A scope containing event metadata.\n   * @returns A SyncPromise that resolves with the event or rejects in case event was/will not be send.\n   */\n\n\n  BaseClient.prototype._processEvent = function (event, hint, scope) {\n    var _this = this;\n\n    var _a = this.getOptions(),\n        beforeSend = _a.beforeSend,\n        sampleRate = _a.sampleRate;\n\n    if (!this._isEnabled()) {\n      return SyncPromise.reject('SDK not enabled, will not send event.');\n    } // 1.0 === 100% events are sent\n    // 0.0 === 0% events are sent\n\n\n    if (typeof sampleRate === 'number' && Math.random() > sampleRate) {\n      return SyncPromise.reject('This event has been sampled, will not send event.');\n    }\n\n    return new SyncPromise(function (resolve, reject) {\n      _this._prepareEvent(event, scope, hint).then(function (prepared) {\n        if (prepared === null) {\n          reject('An event processor returned null, will not send event.');\n          return;\n        }\n\n        var finalEvent = prepared;\n\n        try {\n          var isInternalException = hint && hint.data && hint.data.__sentry__ === true;\n\n          if (isInternalException || !beforeSend) {\n            _this._getBackend().sendEvent(finalEvent);\n\n            resolve(finalEvent);\n            return;\n          }\n\n          var beforeSendResult = beforeSend(prepared, hint);\n\n          if (typeof beforeSendResult === 'undefined') {\n            logger.error('`beforeSend` method has to return `null` or a valid event.');\n          } else if (isThenable(beforeSendResult)) {\n            _this._handleAsyncBeforeSend(beforeSendResult, resolve, reject);\n          } else {\n            finalEvent = beforeSendResult;\n\n            if (finalEvent === null) {\n              logger.log('`beforeSend` returned `null`, will not send event.');\n              resolve(null);\n              return;\n            } // From here on we are really async\n\n\n            _this._getBackend().sendEvent(finalEvent);\n\n            resolve(finalEvent);\n          }\n        } catch (exception) {\n          _this.captureException(exception, {\n            data: {\n              __sentry__: true\n            },\n            originalException: exception\n          });\n\n          reject('`beforeSend` throw an error, will not send event.');\n        }\n      });\n    });\n  };\n  /**\n   * Resolves before send Promise and calls resolve/reject on parent SyncPromise.\n   */\n\n\n  BaseClient.prototype._handleAsyncBeforeSend = function (beforeSend, resolve, reject) {\n    var _this = this;\n\n    beforeSend.then(function (processedEvent) {\n      if (processedEvent === null) {\n        reject('`beforeSend` returned `null`, will not send event.');\n        return;\n      } // From here on we are really async\n\n\n      _this._getBackend().sendEvent(processedEvent);\n\n      resolve(processedEvent);\n    })[\"catch\"](function (e) {\n      reject(\"beforeSend rejected with \" + e);\n    });\n  };\n\n  return BaseClient;\n}();\n\nexport { BaseClient };","import \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport { Status } from '@sentry/types';\n/** Noop transport */\n\nvar NoopTransport =\n/** @class */\nfunction () {\n  function NoopTransport() {}\n  /**\n   * @inheritDoc\n   */\n\n\n  NoopTransport.prototype.sendEvent = function (_) {\n    return Promise.resolve({\n      reason: \"NoopTransport: Event has been skipped because no Dsn is configured.\",\n      status: Status.Skipped\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  NoopTransport.prototype.close = function (_) {\n    return Promise.resolve(true);\n  };\n\n  return NoopTransport;\n}();\n\nexport { NoopTransport };","import { logger, SentryError } from '@sentry/utils';\nimport { NoopTransport } from './transports/noop';\n/**\n * This is the base implemention of a Backend.\n * @hidden\n */\n\nvar BaseBackend =\n/** @class */\nfunction () {\n  /** Creates a new backend instance. */\n  function BaseBackend(options) {\n    this._options = options;\n\n    if (!this._options.dsn) {\n      logger.warn('No DSN provided, backend will not do anything.');\n    }\n\n    this._transport = this._setupTransport();\n  }\n  /**\n   * Sets up the transport so it can be used later to send requests.\n   */\n\n\n  BaseBackend.prototype._setupTransport = function () {\n    return new NoopTransport();\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseBackend.prototype.eventFromException = function (_exception, _hint) {\n    throw new SentryError('Backend has to implement `eventFromException` method');\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseBackend.prototype.eventFromMessage = function (_message, _level, _hint) {\n    throw new SentryError('Backend has to implement `eventFromMessage` method');\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseBackend.prototype.sendEvent = function (event) {\n    this._transport.sendEvent(event)[\"catch\"](function (reason) {\n      logger.error(\"Error while sending event: \" + reason);\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseBackend.prototype.getTransport = function () {\n    return this._transport;\n  };\n\n  return BaseBackend;\n}();\n\nexport { BaseBackend };","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.index-of\";\nimport { logger } from './logger';\nimport { getGlobalObject } from './misc';\n/**\n * Tells whether current environment supports ErrorEvent objects\n * {@link supportsErrorEvent}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsErrorEvent() {\n  try {\n    // tslint:disable:no-unused-expression\n    new ErrorEvent('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports DOMError objects\n * {@link supportsDOMError}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsDOMError() {\n  try {\n    // It really needs 1 argument, not 0.\n    // Chrome: VM89:1 Uncaught TypeError: Failed to construct 'DOMError':\n    // 1 argument required, but only 0 present.\n    // @ts-ignore\n    // tslint:disable:no-unused-expression\n    new DOMError('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports DOMException objects\n * {@link supportsDOMException}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsDOMException() {\n  try {\n    // tslint:disable:no-unused-expression\n    new DOMException('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports Fetch API\n * {@link supportsFetch}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsFetch() {\n  if (!('fetch' in getGlobalObject())) {\n    return false;\n  }\n\n  try {\n    // tslint:disable-next-line:no-unused-expression\n    new Headers(); // tslint:disable-next-line:no-unused-expression\n\n    new Request(''); // tslint:disable-next-line:no-unused-expression\n\n    new Response();\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports Fetch API natively\n * {@link supportsNativeFetch}.\n *\n * @returns true if `window.fetch` is natively implemented, false otherwise\n */\n\nexport function supportsNativeFetch() {\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  var isNativeFunc = function isNativeFunc(func) {\n    return func.toString().indexOf('native') !== -1;\n  };\n\n  var global = getGlobalObject();\n  var result = null;\n  var doc = global.document;\n\n  if (doc) {\n    var sandbox = doc.createElement('iframe');\n    sandbox.hidden = true;\n\n    try {\n      doc.head.appendChild(sandbox);\n\n      if (sandbox.contentWindow && sandbox.contentWindow.fetch) {\n        // tslint:disable-next-line no-unbound-method\n        result = isNativeFunc(sandbox.contentWindow.fetch);\n      }\n\n      doc.head.removeChild(sandbox);\n    } catch (err) {\n      logger.warn('Could not create sandbox iframe for pure fetch check, bailing to window.fetch: ', err);\n    }\n  }\n\n  if (result === null) {\n    // tslint:disable-next-line no-unbound-method\n    result = isNativeFunc(global.fetch);\n  }\n\n  return result;\n}\n/**\n * Tells whether current environment supports ReportingObserver API\n * {@link supportsReportingObserver}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsReportingObserver() {\n  // tslint:disable-next-line: no-unsafe-any\n  return 'ReportingObserver' in getGlobalObject();\n}\n/**\n * Tells whether current environment supports Referrer Policy API\n * {@link supportsReferrerPolicy}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsReferrerPolicy() {\n  // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n  // https://caniuse.com/#feat=referrer-policy\n  // It doesn't. And it throw exception instead of ignoring this parameter...\n  // REF: https://github.com/getsentry/raven-js/issues/1233\n  if (!supportsFetch()) {\n    return false;\n  }\n\n  try {\n    // tslint:disable:no-unused-expression\n    new Request('_', {\n      referrerPolicy: 'origin'\n    });\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n/**\n * Tells whether current environment supports History API\n * {@link supportsHistory}.\n *\n * @returns Answer to the given question.\n */\n\nexport function supportsHistory() {\n  // NOTE: in Chrome App environment, touching history.pushState, *even inside\n  //       a try/catch block*, will cause Chrome to output an error to console.error\n  // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n  var global = getGlobalObject();\n  var chrome = global.chrome; // tslint:disable-next-line:no-unsafe-any\n\n  var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  var hasHistoryApi = 'history' in global && !!global.history.pushState && !!global.history.replaceState;\n  return !isChromePackagedApp && hasHistoryApi;\n}","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n// tslint:disable\nimport * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isError, isErrorEvent } from '@sentry/utils';\n/**\n * TraceKit - Cross brower stack traces\n *\n * This was originally forked from github.com/occ/TraceKit, but has since been\n * largely modified and is now maintained as part of Sentry JS SDK.\n *\n * NOTE: Last merge with upstream repository\n * Jul 11,2018 - #f03357c\n *\n * https://github.com/csnover/TraceKit\n * @license MIT\n * @namespace TraceKit\n */\n\nvar window = getGlobalObject();\nvar TraceKit = {\n  _report: false,\n  _collectWindowErrors: false,\n  _computeStackTrace: false,\n  _linesOfContext: false\n}; // var TraceKit: TraceKitInterface = {};\n// var TraceKit = {};\n// global reference to slice\n\nvar UNKNOWN_FUNCTION = '?'; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\n\nvar ERROR_TYPES_RE = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/;\n/**\n * A better form of hasOwnProperty<br/>\n * Example: `_has(MainHostObject, property) === true/false`\n *\n * @param {Object} object to check property\n * @param {string} key to check\n * @return {Boolean} true if the object has the key and it is not inherited\n */\n\nfunction _has(object, key) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n/**\n * A safe form of location.href<br/>\n *\n * @return {string} location.href\n */\n\n\nfunction getLocationHref() {\n  if (typeof document === 'undefined' || document.location == null) return '';\n  return document.location.href;\n}\n/**\n * Cross-browser processing of unhandled exceptions\n *\n * Syntax:\n * ```js\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n * ```\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *     on top frame; column number is not guaranteed\n *   - Opera: full stack trace with line and column numbers\n *   - Chrome: full stack trace with line and column numbers\n *   - Safari: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *   - IE: line and column number for the top frame only; some frames\n *     may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit._computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a TraceKit.StackTrace object as described in the\n * TraceKit._computeStackTrace docs.\n *\n * @memberof TraceKit\n * @namespace\n */\n\n\nTraceKit._report = function reportModuleWrapper() {\n  var handlers = [],\n      lastException = null,\n      lastExceptionStack = null;\n  /**\n   * Add a crash handler.\n   * @param {Function} handler\n   * @memberof TraceKit.report\n   */\n\n  function _subscribe(handler) {\n    // NOTE: We call both handlers manually in browser/integrations/globalhandler.ts\n    // So user can choose which one he wants to attach\n    // installGlobalHandler();\n    // installGlobalUnhandledRejectionHandler();\n    handlers.push(handler);\n  }\n  /**\n   * Dispatch stack information to all handlers.\n   * @param {TraceKit.StackTrace} stack\n   * @param {boolean} isWindowError Is this a top-level window error?\n   * @param {Error=} error The error that's being handled (if available, null otherwise)\n   * @memberof TraceKit.report\n   * @throws An exception if an error occurs while calling an handler.\n   */\n\n\n  function _notifyHandlers(stack, isWindowError, error) {\n    var exception = null;\n\n    if (isWindowError && !TraceKit._collectWindowErrors) {\n      return;\n    }\n\n    for (var i in handlers) {\n      if (_has(handlers, i)) {\n        try {\n          handlers[i](stack, isWindowError, error);\n        } catch (inner) {\n          exception = inner;\n        }\n      }\n    }\n\n    if (exception) {\n      throw exception;\n    }\n  }\n\n  var _oldOnerrorHandler, _onErrorHandlerInstalled;\n  /**\n   * Ensures all global unhandled exceptions are recorded.\n   * Supported by Gecko and IE.\n   * @param {string} message Error message.\n   * @param {string} url URL of script that generated the exception.\n   * @param {(number|string)} lineNo The line number at which the error occurred.\n   * @param {(number|string)=} columnNo The column number at which the error occurred.\n   * @param {Error=} errorObj The actual Error object.\n   * @memberof TraceKit.report\n   */\n\n\n  function _traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\n    var stack = null; // If 'errorObj' is ErrorEvent, get real Error from inside\n\n    errorObj = isErrorEvent(errorObj) ? errorObj.error : errorObj; // If 'message' is ErrorEvent, get real message from inside\n\n    message = isErrorEvent(message) ? message.message : message;\n\n    if (lastExceptionStack) {\n      TraceKit._computeStackTrace._augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n\n      processLastException();\n    } else if (errorObj && isError(errorObj)) {\n      stack = TraceKit._computeStackTrace(errorObj);\n      stack.mechanism = 'onerror';\n\n      _notifyHandlers(stack, true, errorObj);\n    } else {\n      var location = {\n        url: url,\n        line: lineNo,\n        column: columnNo\n      };\n      var name;\n      var msg = message; // must be new var or will modify original `arguments`\n\n      if ({}.toString.call(message) === '[object String]') {\n        var groups = message.match(ERROR_TYPES_RE);\n\n        if (groups) {\n          name = groups[1];\n          msg = groups[2];\n        }\n      }\n\n      location.func = UNKNOWN_FUNCTION;\n      location.context = null;\n      stack = {\n        name: name,\n        message: msg,\n        mode: 'onerror',\n        mechanism: 'onerror',\n        stack: [tslib_1.__assign({}, location, {\n          // Firefox sometimes doesn't return url correctly and this is an old behavior\n          // that I prefer to port here as well.\n          // It can be altered only here, as previously it's using `location.url` for other things — Kamil\n          url: location.url || getLocationHref()\n        })]\n      };\n\n      _notifyHandlers(stack, true, null);\n    }\n\n    if (_oldOnerrorHandler) {\n      // @ts-ignore\n      return _oldOnerrorHandler.apply(this, arguments);\n    }\n\n    return false;\n  }\n  /**\n   * Ensures all unhandled rejections are recorded.\n   * @param {PromiseRejectionEvent} e event.\n   * @memberof TraceKit.report\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onunhandledrejection\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n   */\n\n\n  function _traceKitWindowOnUnhandledRejection(e) {\n    var err = e && typeof e.reason !== 'undefined' ? e.reason : e;\n\n    var stack = TraceKit._computeStackTrace(err);\n\n    stack.mechanism = 'onunhandledrejection';\n\n    _notifyHandlers(stack, true, err);\n  }\n  /**\n   * Install a global onerror handler\n   * @memberof TraceKit.report\n   */\n\n\n  function _installGlobalHandler() {\n    if (_onErrorHandlerInstalled === true) {\n      return;\n    }\n\n    _oldOnerrorHandler = window.onerror;\n    window.onerror = _traceKitWindowOnError;\n    _onErrorHandlerInstalled = true;\n  }\n  /**\n   * Install a global onunhandledrejection handler\n   * @memberof TraceKit.report\n   */\n\n\n  function _installGlobalUnhandledRejectionHandler() {\n    window.onunhandledrejection = _traceKitWindowOnUnhandledRejection;\n  }\n  /**\n   * Process the most recent exception\n   * @memberof TraceKit.report\n   */\n\n\n  function processLastException() {\n    var _lastExceptionStack = lastExceptionStack,\n        _lastException = lastException;\n    lastExceptionStack = null;\n    lastException = null;\n\n    _notifyHandlers(_lastExceptionStack, false, _lastException);\n  }\n  /**\n   * Reports an unhandled Error to TraceKit.\n   * @param {Error} ex\n   * @memberof TraceKit.report\n   * @throws An exception if an incomplete stack trace is detected (old IE browsers).\n   */\n\n\n  function _report(ex) {\n    if (lastExceptionStack) {\n      if (lastException === ex) {\n        return; // already caught by an inner catch block, ignore\n      } else {\n        processLastException();\n      }\n    }\n\n    var stack = TraceKit._computeStackTrace(ex);\n\n    lastExceptionStack = stack;\n    lastException = ex; // If the stack trace is incomplete, wait for 2 seconds for\n    // slow slow IE to see if onerror occurs or not before reporting\n    // this exception; otherwise, we will end up with an incomplete\n    // stack trace\n\n    setTimeout(function () {\n      if (lastException === ex) {\n        processLastException();\n      }\n    }, stack.incomplete ? 2000 : 0);\n    throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n  }\n\n  _report._subscribe = _subscribe;\n  _report._installGlobalHandler = _installGlobalHandler;\n  _report._installGlobalUnhandledRejectionHandler = _installGlobalUnhandledRejectionHandler;\n  return _report;\n}();\n/**\n * An object representing a single stack frame.\n * @typedef {Object} StackFrame\n * @property {string} url The JavaScript or HTML file URL.\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\n * @property {string[]?} args The arguments passed to the function, if known.\n * @property {number=} line The line number, if known.\n * @property {number=} column The column number, if known.\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\n * @memberof TraceKit\n */\n\n/**\n * An object representing a JavaScript stack trace.\n * @typedef {Object} StackTrace\n * @property {string} name The name of the thrown exception.\n * @property {string} message The exception error message.\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\n * @memberof TraceKit\n */\n\n/**\n * TraceKit._computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   ```js\n *   s = TraceKit._computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n *   ```\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit._computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit._computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n * @memberof TraceKit\n * @namespace\n */\n\n\nTraceKit._computeStackTrace = function _computeStackTraceWrapper() {\n  // Contents of Exception in various browsers.\n  //\n  // SAFARI:\n  // ex.message = Can't find variable: qq\n  // ex.line = 59\n  // ex.sourceId = 580238192\n  // ex.sourceURL = http://...\n  // ex.expressionBeginOffset = 96\n  // ex.expressionCaretOffset = 98\n  // ex.expressionEndOffset = 98\n  // ex.name = ReferenceError\n  //\n  // FIREFOX:\n  // ex.message = qq is not defined\n  // ex.fileName = http://...\n  // ex.lineNumber = 59\n  // ex.columnNumber = 69\n  // ex.stack = ...stack trace... (see the example below)\n  // ex.name = ReferenceError\n  //\n  // CHROME:\n  // ex.message = qq is not defined\n  // ex.name = ReferenceError\n  // ex.type = not_defined\n  // ex.arguments = ['aa']\n  // ex.stack = ...stack trace...\n  //\n  // INTERNET EXPLORER:\n  // ex.message = ...\n  // ex.name = ReferenceError\n  //\n  // OPERA:\n  // ex.message = ...message... (see the example below)\n  // ex.name = ReferenceError\n  // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n  // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n  /**\n   * Computes stack trace information from the stack property.\n   * Chrome and Gecko use this property.\n   * @param {Error} ex\n   * @return {?TraceKit.StackTrace} Stack trace information.\n   * @memberof TraceKit._computeStackTrace\n   */\n  function _computeStackTraceFromStackProp(ex) {\n    if (!ex || !ex.stack) {\n      return null;\n    } // Chromium based browsers: Chrome, Brave, new Opera, new Edge\n\n\n    var chrome = /^\\s*at (?:(.*?) ?\\()?((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|[-a-z]+:|\\/).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n        // gecko regex: `(?:bundle|\\d+\\.js)`: `bundle` is for react native, `\\d+\\.js` also but specifically for ram bundles because it\n    // generates filenames without a prefix like `file://` the filenames in the stacktrace are just 42.js\n    // We need this specific case for now because we want no other regex to match.\n    gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)?((?:file|https?|blob|chrome|webpack|resource|moz-extension).*?:\\/.*?|\\[native code\\]|[^@]*(?:bundle|\\d+\\.js))(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n        winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n        // Used to additionally parse URL/line/column from eval frames\n    isEval,\n        geckoEval = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i,\n        chromeEval = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/,\n        lines = ex.stack.split('\\n'),\n        stack = [],\n        submatch,\n        parts,\n        element,\n        reference = /^(.*) is undefined$/.exec(ex.message);\n\n    for (var i = 0, j = lines.length; i < j; ++i) {\n      if (parts = chrome.exec(lines[i])) {\n        var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n        isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n        if (isEval && (submatch = chromeEval.exec(parts[2]))) {\n          // throw out eval line/column and use top-most line/column number\n          parts[2] = submatch[1]; // url\n\n          parts[3] = submatch[2]; // line\n\n          parts[4] = submatch[3]; // column\n        }\n\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: isNative ? [parts[2]] : [],\n          line: parts[3] ? +parts[3] : null,\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if (parts = winjs.exec(lines[i])) {\n        element = {\n          url: parts[2],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: [],\n          line: +parts[3],\n          column: parts[4] ? +parts[4] : null\n        };\n      } else if (parts = gecko.exec(lines[i])) {\n        isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n\n        if (isEval && (submatch = geckoEval.exec(parts[3]))) {\n          // throw out eval line/column and use top-most line number\n          parts[1] = parts[1] || \"eval\";\n          parts[3] = submatch[1];\n          parts[4] = submatch[2];\n          parts[5] = ''; // no column when eval\n        } else if (i === 0 && !parts[5] && ex.columnNumber !== void 0) {\n          // FireFox uses this awesome columnNumber property for its top frame\n          // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n          // so adding 1\n          // NOTE: this hack doesn't work if top-most frame is eval\n          stack[0].column = ex.columnNumber + 1;\n        }\n\n        element = {\n          url: parts[3],\n          func: parts[1] || UNKNOWN_FUNCTION,\n          args: parts[2] ? parts[2].split(',') : [],\n          line: parts[4] ? +parts[4] : null,\n          column: parts[5] ? +parts[5] : null\n        };\n      } else {\n        continue;\n      }\n\n      if (!element.func && element.line) {\n        element.func = UNKNOWN_FUNCTION;\n      }\n\n      element.context = null;\n      stack.push(element);\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    if (stack[0] && stack[0].line && !stack[0].column && reference) {\n      stack[0].column = null;\n    }\n\n    return {\n      mode: 'stack',\n      name: ex.name,\n      message: ex.message,\n      stack: stack\n    };\n  }\n  /**\n   * Computes stack trace information from the stacktrace property.\n   * Opera 10+ uses this property.\n   * @param {Error} ex\n   * @return {?TraceKit.StackTrace} Stack trace information.\n   * @memberof TraceKit._computeStackTrace\n   */\n\n\n  function _computeStackTraceFromStacktraceProp(ex) {\n    // Access and store the stacktrace property before doing ANYTHING\n    // else to it because Opera is not very good at providing it\n    // reliably in other circumstances.\n    var stacktrace = ex.stacktrace;\n\n    if (!stacktrace) {\n      return;\n    }\n\n    var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\n        opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\n        lines = stacktrace.split('\\n'),\n        stack = [],\n        parts;\n\n    for (var line = 0; line < lines.length; line += 2) {\n      var element = null;\n\n      if (parts = opera10Regex.exec(lines[line])) {\n        element = {\n          url: parts[2],\n          line: +parts[1],\n          column: null,\n          func: parts[3],\n          args: []\n        };\n      } else if (parts = opera11Regex.exec(lines[line])) {\n        element = {\n          url: parts[6],\n          line: +parts[1],\n          column: +parts[2],\n          func: parts[3] || parts[4],\n          args: parts[5] ? parts[5].split(',') : []\n        };\n      }\n\n      if (element) {\n        if (!element.func && element.line) {\n          element.func = UNKNOWN_FUNCTION;\n        }\n\n        if (element.line) {\n          element.context = null;\n        }\n\n        if (!element.context) {\n          element.context = [lines[line + 1]];\n        }\n\n        stack.push(element);\n      }\n    }\n\n    if (!stack.length) {\n      return null;\n    }\n\n    return {\n      mode: 'stacktrace',\n      name: ex.name,\n      message: ex.message,\n      stack: stack\n    };\n  }\n  /**\n   * NOT TESTED.\n   * Computes stack trace information from an error message that includes\n   * the stack trace.\n   * Opera 9 and earlier use this method if the option to show stack\n   * traces is turned on in opera:config.\n   * @param {Error} ex\n   * @return {?TraceKit.StackTrace} Stack information.\n   * @memberof TraceKit._computeStackTrace\n   */\n\n\n  function _computeStackTraceFromOperaMultiLineMessage(ex) {\n    // TODO: Clean this function up\n    // Opera includes a stack trace into the exception message. An example is:\n    //\n    // Statement on line 3: Undefined variable: undefinedFunc\n    // Backtrace:\n    //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\n    //         undefinedFunc(a);\n    //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\n    //           zzz(x, y, z);\n    //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\n    //           yyy(a, a, a);\n    //   Line 1 of function script\n    //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\n    //   ...\n    var lines = ex.message.split('\\n');\n\n    if (lines.length < 4) {\n      return null;\n    }\n\n    var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n        lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\n        lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\n        stack = [],\n        scripts = window && window.document && window.document.getElementsByTagName('script'),\n        inlineScriptBlocks = [],\n        parts;\n\n    for (var s in scripts) {\n      if (_has(scripts, s) && !scripts[s].src) {\n        inlineScriptBlocks.push(scripts[s]);\n      }\n    }\n\n    for (var line = 2; line < lines.length; line += 2) {\n      var item = null;\n\n      if (parts = lineRE1.exec(lines[line])) {\n        item = {\n          url: parts[2],\n          func: parts[3],\n          args: [],\n          line: +parts[1],\n          column: null\n        };\n      } else if (parts = lineRE2.exec(lines[line])) {\n        item = {\n          url: parts[3],\n          func: parts[4],\n          args: [],\n          line: +parts[1],\n          column: null\n        };\n      } else if (parts = lineRE3.exec(lines[line])) {\n        var url = getLocationHref().replace(/#.*$/, '');\n        item = {\n          url: url,\n          func: '',\n          args: [],\n          line: parts[1],\n          column: null\n        };\n      }\n\n      if (item) {\n        if (!item.func) {\n          item.func = UNKNOWN_FUNCTION;\n        } // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\n\n\n        item.context = [lines[line + 1]];\n        stack.push(item);\n      }\n    }\n\n    if (!stack.length) {\n      return null; // could not parse multiline exception message as Opera stack trace\n    }\n\n    return {\n      mode: 'multiline',\n      name: ex.name,\n      message: lines[0],\n      stack: stack\n    };\n  }\n  /**\n   * Adds information about the first frame to incomplete stack traces.\n   * Safari and IE require this to get complete data on the first frame.\n   * @param {TraceKit.StackTrace} stackInfo Stack trace information from\n   * one of the compute* methods.\n   * @param {string} url The URL of the script that caused an error.\n   * @param {(number|string)} lineNo The line number of the script that\n   * caused an error.\n   * @param {string=} message The error generated by the browser, which\n   * hopefully contains the name of the object that caused the error.\n   * @return {boolean} Whether or not the stack information was\n   * augmented.\n   * @memberof TraceKit._computeStackTrace\n   */\n\n\n  function _augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n    var initial = {\n      url: url,\n      line: lineNo\n    };\n\n    if (initial.url && initial.line) {\n      stackInfo.incomplete = false;\n\n      if (!initial.func) {\n        initial.func = UNKNOWN_FUNCTION;\n      }\n\n      if (!initial.context) {\n        initial.context = null;\n      }\n\n      var reference = / '([^']+)' /.exec(message);\n\n      if (reference) {\n        initial.column = null;\n      }\n\n      if (stackInfo.stack.length > 0) {\n        if (stackInfo.stack[0].url === initial.url) {\n          if (stackInfo.stack[0].line === initial.line) {\n            return false; // already in stack trace\n          } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n            stackInfo.stack[0].line = initial.line;\n            stackInfo.stack[0].context = initial.context;\n            return false;\n          }\n        }\n      }\n\n      stackInfo.stack.unshift(initial);\n      stackInfo.partial = true;\n      return true;\n    } else {\n      stackInfo.incomplete = true;\n    }\n\n    return false;\n  }\n  /**\n   * Computes stack trace information by walking the arguments.caller\n   * chain at the time the exception occurred. This will cause earlier\n   * frames to be missed but is the only way to get any stack trace in\n   * Safari and IE. The top frame is restored by\n   * {@link augmentStackTraceWithInitialElement}.\n   * @param {Error} ex\n   * @return {TraceKit.StackTrace=} Stack trace information.\n   * @memberof TraceKit._computeStackTrace\n   */\n\n\n  function _computeStackTraceByWalkingCallerChain(ex, depth) {\n    var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n        stack = [],\n        funcs = {},\n        recursion = false,\n        parts,\n        item;\n\n    for (var curr = _computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n      if (curr === _computeStackTrace || curr === TraceKit._report) {\n        continue;\n      }\n\n      item = {\n        url: null,\n        func: UNKNOWN_FUNCTION,\n        args: [],\n        line: null,\n        column: null\n      };\n\n      if (curr.name) {\n        item.func = curr.name;\n      } else if (parts = functionName.exec(curr.toString())) {\n        item.func = parts[1];\n      }\n\n      if (typeof item.func === 'undefined') {\n        try {\n          item.func = parts.input.substring(0, parts.input.indexOf('{'));\n        } catch (e) {}\n      }\n\n      if (funcs['' + curr]) {\n        recursion = true;\n      } else {\n        funcs['' + curr] = true;\n      }\n\n      stack.push(item);\n    }\n\n    if (depth) {\n      stack.splice(0, depth);\n    }\n\n    var result = {\n      mode: 'callers',\n      name: ex.name,\n      message: ex.message,\n      stack: stack\n    };\n\n    _augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n\n    return result;\n  }\n  /**\n   * Computes a stack trace for an exception.\n   * @param {Error} ex\n   * @param {(string|number)=} depth\n   * @memberof TraceKit._computeStackTrace\n   */\n\n\n  function computeStackTrace(ex, depth) {\n    var stack = null;\n    depth = depth == null ? 0 : +depth;\n\n    try {\n      // This must be tried first because Opera 10 *destroys*\n      // its stacktrace property if you try to access the stack\n      // property first!!\n      stack = _computeStackTraceFromStacktraceProp(ex);\n\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {}\n\n    try {\n      stack = _computeStackTraceFromStackProp(ex);\n\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {}\n\n    try {\n      stack = _computeStackTraceFromOperaMultiLineMessage(ex);\n\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {}\n\n    try {\n      stack = _computeStackTraceByWalkingCallerChain(ex, depth + 1);\n\n      if (stack) {\n        return stack;\n      }\n    } catch (e) {}\n\n    return {\n      original: ex,\n      name: ex.name,\n      message: ex.message,\n      mode: 'failed'\n    };\n  }\n\n  computeStackTrace._augmentStackTraceWithInitialElement = _augmentStackTraceWithInitialElement;\n  computeStackTrace._computeStackTraceFromStackProp = _computeStackTraceFromStackProp;\n  return computeStackTrace;\n}();\n\nTraceKit._collectWindowErrors = true;\nTraceKit._linesOfContext = 11;\nvar _subscribe = TraceKit._report._subscribe;\nvar _installGlobalHandler = TraceKit._report._installGlobalHandler;\nvar _installGlobalUnhandledRejectionHandler = TraceKit._report._installGlobalUnhandledRejectionHandler;\nvar _computeStackTrace = TraceKit._computeStackTrace;\nexport { _subscribe, _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _computeStackTrace };","import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport { keysToEventMessage, normalizeToSize } from '@sentry/utils';\nimport { _computeStackTrace } from './tracekit';\nvar STACKTRACE_LIMIT = 50;\n/**\n * This function creates an exception from an TraceKitStackTrace\n * @param stacktrace TraceKitStackTrace that will be converted to an exception\n * @hidden\n */\n\nexport function exceptionFromStacktrace(stacktrace) {\n  var frames = prepareFramesForEvent(stacktrace.stack);\n  var exception = {\n    type: stacktrace.name,\n    value: stacktrace.message\n  };\n\n  if (frames && frames.length) {\n    exception.stacktrace = {\n      frames: frames\n    };\n  } // tslint:disable-next-line:strict-type-predicates\n\n\n  if (exception.type === undefined && exception.value === '') {\n    exception.value = 'Unrecoverable error caught';\n  }\n\n  return exception;\n}\n/**\n * @hidden\n */\n\nexport function eventFromPlainObject(exception, syntheticException) {\n  var exceptionKeys = Object.keys(exception).sort();\n  var event = {\n    extra: {\n      __serialized__: normalizeToSize(exception)\n    },\n    message: \"Non-Error exception captured with keys: \" + keysToEventMessage(exceptionKeys)\n  };\n\n  if (syntheticException) {\n    var stacktrace = _computeStackTrace(syntheticException);\n\n    var frames_1 = prepareFramesForEvent(stacktrace.stack);\n    event.stacktrace = {\n      frames: frames_1\n    };\n  }\n\n  return event;\n}\n/**\n * @hidden\n */\n\nexport function eventFromStacktrace(stacktrace) {\n  var exception = exceptionFromStacktrace(stacktrace);\n  return {\n    exception: {\n      values: [exception]\n    }\n  };\n}\n/**\n * @hidden\n */\n\nexport function prepareFramesForEvent(stack) {\n  if (!stack || !stack.length) {\n    return [];\n  }\n\n  var localStack = stack;\n  var firstFrameFunction = localStack[0].func || '';\n  var lastFrameFunction = localStack[localStack.length - 1].func || ''; // If stack starts with one of our API calls, remove it (starts, meaning it's the top of the stack - aka last call)\n\n  if (firstFrameFunction.includes('captureMessage') || firstFrameFunction.includes('captureException')) {\n    localStack = localStack.slice(1);\n  } // If stack ends with one of our internal API calls, remove it (ends, meaning it's the bottom of the stack - aka top-most call)\n\n\n  if (lastFrameFunction.includes('sentryWrapped')) {\n    localStack = localStack.slice(0, -1);\n  } // The frame where the crash happened, should be the last entry in the array\n\n\n  return localStack.map(function (frame) {\n    return {\n      colno: frame.column,\n      filename: frame.url || localStack[0].url,\n      \"function\": frame.func || '?',\n      in_app: true,\n      lineno: frame.line\n    };\n  }).slice(0, STACKTRACE_LIMIT).reverse();\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport { SentryError } from './error';\n/** A simple queue that holds promises. */\n\nvar PromiseBuffer =\n/** @class */\nfunction () {\n  function PromiseBuffer(_limit) {\n    this._limit = _limit;\n    /** Internal set of queued Promises */\n\n    this._buffer = [];\n  }\n  /**\n   * Says if the buffer is ready to take more requests\n   */\n\n\n  PromiseBuffer.prototype.isReady = function () {\n    return this._limit === undefined || this.length() < this._limit;\n  };\n  /**\n   * Add a promise to the queue.\n   *\n   * @param task Can be any Promise<T>\n   * @returns The original promise.\n   */\n\n\n  PromiseBuffer.prototype.add = function (task) {\n    var _this = this;\n\n    if (!this.isReady()) {\n      return Promise.reject(new SentryError('Not adding Promise due to buffer limit reached.'));\n    }\n\n    if (this._buffer.indexOf(task) === -1) {\n      this._buffer.push(task);\n    }\n\n    task.then(function () {\n      return _this.remove(task);\n    })[\"catch\"](function () {\n      return _this.remove(task)[\"catch\"](function () {// We have to add this catch here otherwise we have an unhandledPromiseRejection\n        // because it's a new Promise chain.\n      });\n    });\n    return task;\n  };\n  /**\n   * Remove a promise to the queue.\n   *\n   * @param task Can be any Promise<T>\n   * @returns Removed promise.\n   */\n\n\n  PromiseBuffer.prototype.remove = function (task) {\n    var removedTask = this._buffer.splice(this._buffer.indexOf(task), 1)[0];\n\n    return removedTask;\n  };\n  /**\n   * This function returns the number of unresolved promises in the queue.\n   */\n\n\n  PromiseBuffer.prototype.length = function () {\n    return this._buffer.length;\n  };\n  /**\n   * This will drain the whole queue, returns true if queue is empty or drained.\n   * If timeout is provided and the queue takes longer to drain, the promise still resolves but with false.\n   *\n   * @param timeout Number in ms to wait until it resolves with false.\n   */\n\n\n  PromiseBuffer.prototype.drain = function (timeout) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      var capturedSetTimeout = setTimeout(function () {\n        if (timeout && timeout > 0) {\n          resolve(false);\n        }\n      }, timeout);\n      Promise.all(_this._buffer).then(function () {\n        clearTimeout(capturedSetTimeout);\n        resolve(true);\n      })[\"catch\"](function () {\n        resolve(true);\n      });\n    });\n  };\n\n  return PromiseBuffer;\n}();\n\nexport { PromiseBuffer };","import { API } from '@sentry/core';\nimport { PromiseBuffer, SentryError } from '@sentry/utils';\n/** Base Transport class implementation */\n\nvar BaseTransport =\n/** @class */\nfunction () {\n  function BaseTransport(options) {\n    this.options = options;\n    /** A simple buffer holding all requests. */\n\n    this._buffer = new PromiseBuffer(30);\n    this.url = new API(this.options.dsn).getStoreEndpointWithUrlEncodedAuth();\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseTransport.prototype.sendEvent = function (_) {\n    throw new SentryError('Transport Class has to implement `sendEvent` method');\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BaseTransport.prototype.close = function (timeout) {\n    return this._buffer.drain(timeout);\n  };\n\n  return BaseTransport;\n}();\n\nexport { BaseTransport };","import * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { getGlobalObject, supportsReferrerPolicy } from '@sentry/utils';\nimport { BaseTransport } from './base';\nvar global = getGlobalObject();\n/** `fetch` based transport */\n\nvar FetchTransport =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(FetchTransport, _super);\n\n  function FetchTransport() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  FetchTransport.prototype.sendEvent = function (event) {\n    var defaultOptions = {\n      body: JSON.stringify(event),\n      method: 'POST',\n      // Despite all stars in the sky saying that Edge supports old draft syntax, aka 'never', 'always', 'origin' and 'default\n      // https://caniuse.com/#feat=referrer-policy\n      // It doesn't. And it throw exception instead of ignoring this parameter...\n      // REF: https://github.com/getsentry/raven-js/issues/1233\n      referrerPolicy: supportsReferrerPolicy() ? 'origin' : ''\n    };\n    return this._buffer.add(global.fetch(this.url, defaultOptions).then(function (response) {\n      return {\n        status: Status.fromHttpCode(response.status)\n      };\n    }));\n  };\n\n  return FetchTransport;\n}(BaseTransport);\n\nexport { FetchTransport };","import \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport * as tslib_1 from \"tslib\";\nimport { Status } from '@sentry/types';\nimport { BaseTransport } from './base';\n/** `XHR` based transport */\n\nvar XHRTransport =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(XHRTransport, _super);\n\n  function XHRTransport() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  XHRTransport.prototype.sendEvent = function (event) {\n    var _this = this;\n\n    return this._buffer.add(new Promise(function (resolve, reject) {\n      var request = new XMLHttpRequest();\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          resolve({\n            status: Status.fromHttpCode(request.status)\n          });\n        }\n\n        reject(request);\n      };\n\n      request.open('POST', _this.url);\n      request.send(JSON.stringify(event));\n    }));\n  };\n\n  return XHRTransport;\n}(BaseTransport);\n\nexport { XHRTransport };","import \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { BaseBackend } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionTypeValue, isDOMError, isDOMException, isError, isErrorEvent, isPlainObject, supportsFetch, SyncPromise } from '@sentry/utils';\nimport { eventFromPlainObject, eventFromStacktrace, prepareFramesForEvent } from './parsers';\nimport { _computeStackTrace } from './tracekit';\nimport { FetchTransport, XHRTransport } from './transports';\n/**\n * The Sentry Browser SDK Backend.\n * @hidden\n */\n\nvar BrowserBackend =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BrowserBackend, _super);\n\n  function BrowserBackend() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  BrowserBackend.prototype._setupTransport = function () {\n    if (!this._options.dsn) {\n      // We return the noop transport here in case there is no Dsn.\n      return _super.prototype._setupTransport.call(this);\n    }\n\n    var transportOptions = tslib_1.__assign({}, this._options.transportOptions, {\n      dsn: this._options.dsn\n    });\n\n    if (this._options.transport) {\n      return new this._options.transport(transportOptions);\n    }\n\n    if (supportsFetch()) {\n      return new FetchTransport(transportOptions);\n    }\n\n    return new XHRTransport(transportOptions);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BrowserBackend.prototype.eventFromException = function (exception, hint) {\n    var _this = this;\n\n    var event;\n\n    if (isErrorEvent(exception) && exception.error) {\n      // If it is an ErrorEvent with `error` property, extract it to get actual Error\n      var errorEvent = exception;\n      exception = errorEvent.error; // tslint:disable-line:no-parameter-reassignment\n\n      event = eventFromStacktrace(_computeStackTrace(exception));\n      return SyncPromise.resolve(this._buildEvent(event, hint));\n    }\n\n    if (isDOMError(exception) || isDOMException(exception)) {\n      // If it is a DOMError or DOMException (which are legacy APIs, but still supported in some browsers)\n      // then we just extract the name and message, as they don't provide anything else\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMError\n      // https://developer.mozilla.org/en-US/docs/Web/API/DOMException\n      var domException = exception;\n      var name_1 = domException.name || (isDOMError(domException) ? 'DOMError' : 'DOMException');\n      var message_1 = domException.message ? name_1 + \": \" + domException.message : name_1;\n      return this.eventFromMessage(message_1, Severity.Error, hint).then(function (messageEvent) {\n        addExceptionTypeValue(messageEvent, message_1);\n        return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n      });\n    }\n\n    if (isError(exception)) {\n      // we have a real Error object, do nothing\n      event = eventFromStacktrace(_computeStackTrace(exception));\n      return SyncPromise.resolve(this._buildEvent(event, hint));\n    }\n\n    if (isPlainObject(exception) && hint && hint.syntheticException) {\n      // If it is plain Object, serialize it manually and extract options\n      // This will allow us to group events based on top-level keys\n      // which is much better than creating new group when any key/value change\n      var objectException = exception;\n      event = eventFromPlainObject(objectException, hint.syntheticException);\n      addExceptionTypeValue(event, 'Custom Object', undefined, {\n        handled: true,\n        synthetic: true,\n        type: 'generic'\n      });\n      event.level = Severity.Error;\n      return SyncPromise.resolve(this._buildEvent(event, hint));\n    } // If none of previous checks were valid, then it means that\n    // it's not a DOMError/DOMException\n    // it's not a plain Object\n    // it's not a valid ErrorEvent (one with an error property)\n    // it's not an Error\n    // So bail out and capture it as a simple message:\n\n\n    var stringException = exception;\n    return this.eventFromMessage(stringException, undefined, hint).then(function (messageEvent) {\n      addExceptionTypeValue(messageEvent, \"\" + stringException, undefined, {\n        handled: true,\n        synthetic: true,\n        type: 'generic'\n      });\n      messageEvent.level = Severity.Error;\n      return SyncPromise.resolve(_this._buildEvent(messageEvent, hint));\n    });\n  };\n  /**\n   * This is an internal helper function that creates an event.\n   */\n\n\n  BrowserBackend.prototype._buildEvent = function (event, hint) {\n    return tslib_1.__assign({}, event, {\n      event_id: hint && hint.event_id\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  BrowserBackend.prototype.eventFromMessage = function (message, level, hint) {\n    if (level === void 0) {\n      level = Severity.Info;\n    }\n\n    var event = {\n      event_id: hint && hint.event_id,\n      level: level,\n      message: message\n    };\n\n    if (this._options.attachStacktrace && hint && hint.syntheticException) {\n      var stacktrace = _computeStackTrace(hint.syntheticException);\n\n      var frames_1 = prepareFramesForEvent(stacktrace.stack);\n      event.stacktrace = {\n        frames: frames_1\n      };\n    }\n\n    return SyncPromise.resolve(event);\n  };\n\n  return BrowserBackend;\n}(BaseBackend);\n\nexport { BrowserBackend };","export var SDK_NAME = 'sentry.javascript.browser';\nexport var SDK_VERSION = '5.6.1';","import * as tslib_1 from \"tslib\";\nimport { API, BaseClient } from '@sentry/core';\nimport { getGlobalObject, logger } from '@sentry/utils';\nimport { BrowserBackend } from './backend';\nimport { SDK_NAME, SDK_VERSION } from './version';\n/**\n * The Sentry Browser SDK Client.\n *\n * @see BrowserOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\n\nvar BrowserClient =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(BrowserClient, _super);\n  /**\n   * Creates a new Browser SDK instance.\n   *\n   * @param options Configuration options for this SDK.\n   */\n\n\n  function BrowserClient(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _super.call(this, BrowserBackend, options) || this;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  BrowserClient.prototype._prepareEvent = function (event, scope, hint) {\n    event.platform = event.platform || 'javascript';\n    event.sdk = tslib_1.__assign({}, event.sdk, {\n      name: SDK_NAME,\n      packages: tslib_1.__spread(event.sdk && event.sdk.packages || [], [{\n        name: 'npm:@sentry/browser',\n        version: SDK_VERSION\n      }]),\n      version: SDK_VERSION\n    });\n    return _super.prototype._prepareEvent.call(this, event, scope, hint);\n  };\n  /**\n   * Show a report dialog to the user to send feedback to a specific event.\n   *\n   * @param options Set individual options for the dialog\n   */\n\n\n  BrowserClient.prototype.showReportDialog = function (options) {\n    if (options === void 0) {\n      options = {};\n    } // doesn't work without a document (React Native)\n\n\n    var document = getGlobalObject().document;\n\n    if (!document) {\n      return;\n    }\n\n    if (!this._isEnabled()) {\n      logger.error('Trying to call showReportDialog with Sentry Client is disabled');\n      return;\n    }\n\n    var dsn = options.dsn || this.getDsn();\n\n    if (!options.eventId) {\n      logger.error('Missing `eventId` option in showReportDialog call');\n      return;\n    }\n\n    if (!dsn) {\n      logger.error('Missing `Dsn` option in showReportDialog call');\n      return;\n    }\n\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = new API(dsn).getReportDialogEndpoint(options);\n\n    if (options.onLoad) {\n      script.onload = options.onLoad;\n    }\n\n    (document.head || document.body).appendChild(script);\n  };\n\n  return BrowserClient;\n}(BaseClient);\n\nexport { BrowserClient };","import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.array.map\";\nimport * as tslib_1 from \"tslib\";\nimport { captureException, getCurrentHub, withScope } from '@sentry/core';\nimport { addExceptionTypeValue, isString, normalize } from '@sentry/utils';\nvar debounceDuration = 1000;\nvar keypressTimeout;\nvar lastCapturedEvent;\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\n\nexport function shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\n\nexport function ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(function () {\n    ignoreOnError -= 1;\n  });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\n\nexport function wrap(fn, options, before) {\n  if (options === void 0) {\n    options = {};\n  } // tslint:disable-next-line:strict-type-predicates\n\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // We don't wanna wrap it twice\n    if (fn.__sentry__) {\n      return fn;\n    } // If this has already been wrapped in the past, return that wrapped function\n\n\n    if (fn.__sentry_wrapped__) {\n      return fn.__sentry_wrapped__;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n\n  var sentryWrapped = function sentryWrapped() {\n    // tslint:disable-next-line:strict-type-predicates\n    if (before && typeof before === 'function') {\n      before.apply(this, arguments);\n    }\n\n    var args = Array.prototype.slice.call(arguments); // tslint:disable:no-unsafe-any\n\n    try {\n      var wrappedArguments = args.map(function (arg) {\n        return wrap(arg, options);\n      });\n\n      if (fn.handleEvent) {\n        // Attempt to invoke user-land function\n        // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n        //       means the sentry.javascript SDK caught an error invoking your application code. This\n        //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n        return fn.handleEvent.apply(this, wrappedArguments);\n      } // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n\n\n      return fn.apply(this, wrappedArguments); // tslint:enable:no-unsafe-any\n    } catch (ex) {\n      ignoreNextOnError();\n      withScope(function (scope) {\n        scope.addEventProcessor(function (event) {\n          var processedEvent = tslib_1.__assign({}, event);\n\n          if (options.mechanism) {\n            addExceptionTypeValue(processedEvent, undefined, undefined, options.mechanism);\n          }\n\n          processedEvent.extra = tslib_1.__assign({}, processedEvent.extra, {\n            arguments: normalize(args, 3)\n          });\n          return processedEvent;\n        });\n        captureException(ex);\n      });\n      throw ex;\n    }\n  }; // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n\n\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // tslint:disable-line:no-empty\n\n\n  fn.prototype = fn.prototype || {};\n  sentryWrapped.prototype = fn.prototype;\n  Object.defineProperty(fn, '__sentry_wrapped__', {\n    enumerable: false,\n    value: sentryWrapped\n  }); // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n\n  Object.defineProperties(sentryWrapped, {\n    __sentry__: {\n      enumerable: false,\n      value: true\n    },\n    __sentry_original__: {\n      enumerable: false,\n      value: fn\n    }\n  }); // Restore original function name (not all browsers allow that)\n\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get: function get() {\n          return fn.name;\n        }\n      });\n    }\n  } catch (_oO) {\n    /*no-empty*/\n  }\n\n  return sentryWrapped;\n}\nvar debounceTimer = 0;\n/**\n * Wraps addEventListener to capture UI breadcrumbs\n * @param eventName the event name (e.g. \"click\")\n * @returns wrapped breadcrumb events handler\n * @hidden\n */\n\nexport function breadcrumbEventHandler(eventName, debounce) {\n  if (debounce === void 0) {\n    debounce = false;\n  }\n\n  return function (event) {\n    // reset keypress timeout; e.g. triggering a 'click' after\n    // a 'keypress' will reset the keypress debounce so that a new\n    // set of keypresses can be recorded\n    keypressTimeout = undefined; // It's possible this handler might trigger multiple times for the same\n    // event (e.g. event propagation through node ancestors). Ignore if we've\n    // already captured the event.\n\n    if (!event || lastCapturedEvent === event) {\n      return;\n    }\n\n    lastCapturedEvent = event;\n\n    var captureBreadcrumb = function captureBreadcrumb() {\n      // try/catch both:\n      // - accessing event.target (see getsentry/raven-js#838, #768)\n      // - `htmlTreeAsString` because it's complex, and just accessing the DOM incorrectly\n      //   can throw an exception in some circumstances.\n      var target;\n\n      try {\n        target = event.target ? _htmlTreeAsString(event.target) : _htmlTreeAsString(event);\n      } catch (e) {\n        target = '<unknown>';\n      }\n\n      if (target.length === 0) {\n        return;\n      }\n\n      getCurrentHub().addBreadcrumb({\n        category: \"ui.\" + eventName,\n        message: target\n      }, {\n        event: event,\n        name: eventName\n      });\n    };\n\n    if (debounceTimer) {\n      clearTimeout(debounceTimer);\n    }\n\n    if (debounce) {\n      debounceTimer = setTimeout(captureBreadcrumb);\n    } else {\n      captureBreadcrumb();\n    }\n  };\n}\n/**\n * Wraps addEventListener to capture keypress UI events\n * @returns wrapped keypress events handler\n * @hidden\n */\n\nexport function keypressEventHandler() {\n  // TODO: if somehow user switches keypress target before\n  //       debounce timeout is triggered, we will only capture\n  //       a single breadcrumb from the FIRST target (acceptable?)\n  return function (event) {\n    var target;\n\n    try {\n      target = event.target;\n    } catch (e) {\n      // just accessing event properties can throw an exception in some rare circumstances\n      // see: https://github.com/getsentry/raven-js/issues/838\n      return;\n    }\n\n    var tagName = target && target.tagName; // only consider keypress events on actual input elements\n    // this will disregard keypresses targeting body (e.g. tabbing\n    // through elements, hotkeys, etc)\n\n    if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA' && !target.isContentEditable) {\n      return;\n    } // record first keypress in a series, but ignore subsequent\n    // keypresses until debounce clears\n\n\n    if (!keypressTimeout) {\n      breadcrumbEventHandler('input')(event);\n    }\n\n    clearTimeout(keypressTimeout);\n    keypressTimeout = setTimeout(function () {\n      keypressTimeout = undefined;\n    }, debounceDuration);\n  };\n}\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @returns generated DOM path\n */\n\nfunction _htmlTreeAsString(elem) {\n  var currentElem = elem;\n  var MAX_TRAVERSE_HEIGHT = 5;\n  var MAX_OUTPUT_LEN = 80;\n  var out = [];\n  var height = 0;\n  var len = 0;\n  var separator = ' > ';\n  var sepLength = separator.length;\n  var nextStr;\n\n  while (currentElem && height++ < MAX_TRAVERSE_HEIGHT) {\n    nextStr = _htmlElementAsString(currentElem); // bail out if\n    // - nextStr is the 'html' element\n    // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n    //   (ignore this limit if we are on the first iteration)\n\n    if (nextStr === 'html' || height > 1 && len + out.length * sepLength + nextStr.length >= MAX_OUTPUT_LEN) {\n      break;\n    }\n\n    out.push(nextStr);\n    len += nextStr.length;\n    currentElem = currentElem.parentNode;\n  }\n\n  return out.reverse().join(separator);\n}\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @returns generated DOM path\n */\n\n\nfunction _htmlElementAsString(elem) {\n  var out = [];\n  var className;\n  var classes;\n  var key;\n  var attr;\n  var i;\n\n  if (!elem || !elem.tagName) {\n    return '';\n  }\n\n  out.push(elem.tagName.toLowerCase());\n\n  if (elem.id) {\n    out.push(\"#\" + elem.id);\n  }\n\n  className = elem.className;\n\n  if (className && isString(className)) {\n    classes = className.split(/\\s+/);\n\n    for (i = 0; i < classes.length; i++) {\n      out.push(\".\" + classes[i]);\n    }\n  }\n\n  var attrWhitelist = ['type', 'name', 'title', 'alt'];\n\n  for (i = 0; i < attrWhitelist.length; i++) {\n    key = attrWhitelist[i];\n    attr = elem.getAttribute(key);\n\n    if (attr) {\n      out.push(\"[\" + key + \"=\\\"\" + attr + \"\\\"]\");\n    }\n  }\n\n  return out.join('');\n}","import \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.function.name\";\nimport { fill, getGlobalObject } from '@sentry/utils';\nimport { wrap } from '../helpers';\n/** Wrap timer functions and event targets to catch errors and provide better meta data */\n\nvar TryCatch =\n/** @class */\nfunction () {\n  function TryCatch() {\n    /** JSDoc */\n    this._ignoreOnError = 0;\n    /**\n     * @inheritDoc\n     */\n\n    this.name = TryCatch.id;\n  }\n  /** JSDoc */\n\n\n  TryCatch.prototype._wrapTimeFunction = function (original) {\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var originalCallback = args[0];\n      args[0] = wrap(originalCallback, {\n        mechanism: {\n          data: {\n            \"function\": getFunctionName(original)\n          },\n          handled: true,\n          type: 'instrument'\n        }\n      });\n      return original.apply(this, args);\n    };\n  };\n  /** JSDoc */\n\n\n  TryCatch.prototype._wrapRAF = function (original) {\n    return function (callback) {\n      return original(wrap(callback, {\n        mechanism: {\n          data: {\n            \"function\": 'requestAnimationFrame',\n            handler: getFunctionName(original)\n          },\n          handled: true,\n          type: 'instrument'\n        }\n      }));\n    };\n  };\n  /** JSDoc */\n\n\n  TryCatch.prototype._wrapEventTarget = function (target) {\n    var global = getGlobalObject();\n    var proto = global[target] && global[target].prototype;\n\n    if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n      return;\n    }\n\n    fill(proto, 'addEventListener', function (original) {\n      return function (eventName, fn, options) {\n        try {\n          // tslint:disable-next-line:no-unbound-method strict-type-predicates\n          if (typeof fn.handleEvent === 'function') {\n            fn.handleEvent = wrap(fn.handleEvent.bind(fn), {\n              mechanism: {\n                data: {\n                  \"function\": 'handleEvent',\n                  handler: getFunctionName(fn),\n                  target: target\n                },\n                handled: true,\n                type: 'instrument'\n              }\n            });\n          }\n        } catch (err) {// can sometimes get 'Permission denied to access property \"handle Event'\n        }\n\n        return original.call(this, eventName, wrap(fn, {\n          mechanism: {\n            data: {\n              \"function\": 'addEventListener',\n              handler: getFunctionName(fn),\n              target: target\n            },\n            handled: true,\n            type: 'instrument'\n          }\n        }), options);\n      };\n    });\n    fill(proto, 'removeEventListener', function (original) {\n      return function (eventName, fn, options) {\n        var callback = fn;\n\n        try {\n          callback = callback && (callback.__sentry_wrapped__ || callback);\n        } catch (e) {// ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n        }\n\n        return original.call(this, eventName, callback, options);\n      };\n    });\n  };\n  /**\n   * Wrap timer functions and event targets to catch errors\n   * and provide better metadata.\n   */\n\n\n  TryCatch.prototype.setupOnce = function () {\n    this._ignoreOnError = this._ignoreOnError;\n    var global = getGlobalObject();\n    fill(global, 'setTimeout', this._wrapTimeFunction.bind(this));\n    fill(global, 'setInterval', this._wrapTimeFunction.bind(this));\n    fill(global, 'requestAnimationFrame', this._wrapRAF.bind(this));\n    ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'].forEach(this._wrapEventTarget.bind(this));\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  TryCatch.id = 'TryCatch';\n  return TryCatch;\n}();\n\nexport { TryCatch };\n/**\n * Safely extract function name from itself\n */\n\nfunction getFunctionName(fn) {\n  try {\n    return fn && fn.name || '<anonymous>';\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    return '<anonymous>';\n  }\n}","import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { API, getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { fill, getEventDescription, getGlobalObject, isString, logger, normalize, parseUrl, safeJoin, supportsHistory, supportsNativeFetch } from '@sentry/utils';\nimport { breadcrumbEventHandler, keypressEventHandler, wrap } from '../helpers';\nvar global = getGlobalObject();\nvar lastHref;\n/** Default Breadcrumbs instrumentations */\n\nvar Breadcrumbs =\n/** @class */\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function Breadcrumbs(options) {\n    /**\n     * @inheritDoc\n     */\n    this.name = Breadcrumbs.id;\n    this._options = tslib_1.__assign({\n      console: true,\n      dom: true,\n      fetch: true,\n      history: true,\n      sentry: true,\n      xhr: true\n    }, options);\n  }\n  /** JSDoc */\n\n\n  Breadcrumbs.prototype._instrumentConsole = function () {\n    if (!('console' in global)) {\n      return;\n    }\n\n    ['debug', 'info', 'warn', 'error', 'log', 'assert'].forEach(function (level) {\n      if (!(level in global.console)) {\n        return;\n      }\n\n      fill(global.console, level, function (originalConsoleLevel) {\n        return function () {\n          var args = [];\n\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n\n          var breadcrumbData = {\n            category: 'console',\n            data: {\n              extra: {\n                arguments: normalize(args, 3)\n              },\n              logger: 'console'\n            },\n            level: Severity.fromString(level),\n            message: safeJoin(args, ' ')\n          };\n\n          if (level === 'assert') {\n            if (args[0] === false) {\n              breadcrumbData.message = \"Assertion failed: \" + (safeJoin(args.slice(1), ' ') || 'console.assert');\n              breadcrumbData.data.extra.arguments = normalize(args.slice(1), 3);\n            }\n          }\n\n          Breadcrumbs.addBreadcrumb(breadcrumbData, {\n            input: args,\n            level: level\n          }); // this fails for some browsers. :(\n\n          if (originalConsoleLevel) {\n            Function.prototype.apply.call(originalConsoleLevel, global.console, args);\n          }\n        };\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  Breadcrumbs.prototype._instrumentDOM = function () {\n    if (!('document' in global)) {\n      return;\n    } // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n    // to the document. Do this before we instrument addEventListener.\n\n\n    global.document.addEventListener('click', breadcrumbEventHandler('click'), false);\n    global.document.addEventListener('keypress', keypressEventHandler(), false); // After hooking into document bubbled up click and keypresses events, we also hook into user handled click & keypresses.\n\n    ['EventTarget', 'Node'].forEach(function (target) {\n      var proto = global[target] && global[target].prototype;\n\n      if (!proto || !proto.hasOwnProperty || !proto.hasOwnProperty('addEventListener')) {\n        return;\n      }\n\n      fill(proto, 'addEventListener', function (original) {\n        return function (eventName, fn, options) {\n          if (fn && fn.handleEvent) {\n            if (eventName === 'click') {\n              fill(fn, 'handleEvent', function (innerOriginal) {\n                return function (event) {\n                  breadcrumbEventHandler('click')(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n\n            if (eventName === 'keypress') {\n              fill(fn, 'handleEvent', function (innerOriginal) {\n                return function (event) {\n                  keypressEventHandler()(event);\n                  return innerOriginal.call(this, event);\n                };\n              });\n            }\n          } else {\n            if (eventName === 'click') {\n              breadcrumbEventHandler('click', true)(this);\n            }\n\n            if (eventName === 'keypress') {\n              keypressEventHandler()(this);\n            }\n          }\n\n          return original.call(this, eventName, fn, options);\n        };\n      });\n      fill(proto, 'removeEventListener', function (original) {\n        return function (eventName, fn, options) {\n          var callback = fn;\n\n          try {\n            callback = callback && (callback.__sentry_wrapped__ || callback);\n          } catch (e) {// ignore, accessing __sentry_wrapped__ will throw in some Selenium environments\n          }\n\n          return original.call(this, eventName, callback, options);\n        };\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  Breadcrumbs.prototype._instrumentFetch = function () {\n    if (!supportsNativeFetch()) {\n      return;\n    }\n\n    fill(global, 'fetch', function (originalFetch) {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var fetchInput = args[0];\n        var method = 'GET';\n        var url;\n\n        if (typeof fetchInput === 'string') {\n          url = fetchInput;\n        } else if ('Request' in global && fetchInput instanceof Request) {\n          url = fetchInput.url;\n\n          if (fetchInput.method) {\n            method = fetchInput.method;\n          }\n        } else {\n          url = String(fetchInput);\n        }\n\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n\n        var client = getCurrentHub().getClient();\n        var dsn = client && client.getDsn();\n\n        if (dsn) {\n          var filterUrl = new API(dsn).getStoreEndpoint(); // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n\n          if (filterUrl && url.includes(filterUrl)) {\n            if (method === 'POST' && args[1] && args[1].body) {\n              addSentryBreadcrumb(args[1].body);\n            }\n\n            return originalFetch.apply(global, args);\n          }\n        }\n\n        var fetchData = {\n          method: isString(method) ? method.toUpperCase() : method,\n          url: url\n        };\n        return originalFetch.apply(global, args).then(function (response) {\n          fetchData.status_code = response.status;\n          Breadcrumbs.addBreadcrumb({\n            category: 'fetch',\n            data: fetchData,\n            type: 'http'\n          }, {\n            input: args,\n            response: response\n          });\n          return response;\n        })[\"catch\"](function (error) {\n          Breadcrumbs.addBreadcrumb({\n            category: 'fetch',\n            data: fetchData,\n            level: Severity.Error,\n            type: 'http'\n          }, {\n            error: error,\n            input: args\n          });\n          throw error;\n        });\n      };\n    });\n  };\n  /** JSDoc */\n\n\n  Breadcrumbs.prototype._instrumentHistory = function () {\n    var _this = this;\n\n    if (!supportsHistory()) {\n      return;\n    }\n\n    var captureUrlChange = function captureUrlChange(from, to) {\n      var parsedLoc = parseUrl(global.location.href);\n      var parsedTo = parseUrl(to);\n      var parsedFrom = parseUrl(from); // Initial pushState doesn't provide `from` information\n\n      if (!parsedFrom.path) {\n        parsedFrom = parsedLoc;\n      } // because onpopstate only tells you the \"new\" (to) value of location.href, and\n      // not the previous (from) value, we need to track the value of the current URL\n      // state ourselves\n\n\n      lastHref = to; // Use only the path component of the URL if the URL matches the current\n      // document (almost all the time when using pushState)\n\n      if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        to = parsedTo.relative;\n      }\n\n      if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host) {\n        // tslint:disable-next-line:no-parameter-reassignment\n        from = parsedFrom.relative;\n      }\n\n      Breadcrumbs.addBreadcrumb({\n        category: 'navigation',\n        data: {\n          from: from,\n          to: to\n        }\n      });\n    }; // record navigation (URL) changes\n\n\n    var oldOnPopState = global.onpopstate;\n\n    global.onpopstate = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var currentHref = global.location.href;\n      captureUrlChange(lastHref, currentHref);\n\n      if (oldOnPopState) {\n        return oldOnPopState.apply(_this, args);\n      }\n    };\n    /**\n     * @hidden\n     */\n\n\n    function historyReplacementFunction(originalHistoryFunction) {\n      // note history.pushState.length is 0; intentionally not declaring\n      // params to preserve 0 arity\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var url = args.length > 2 ? args[2] : undefined; // url argument is optional\n\n        if (url) {\n          // coerce to string (this is what pushState does)\n          captureUrlChange(lastHref, String(url));\n        }\n\n        return originalHistoryFunction.apply(this, args);\n      };\n    }\n\n    fill(global.history, 'pushState', historyReplacementFunction);\n    fill(global.history, 'replaceState', historyReplacementFunction);\n  };\n  /** JSDoc */\n\n\n  Breadcrumbs.prototype._instrumentXHR = function () {\n    if (!('XMLHttpRequest' in global)) {\n      return;\n    }\n    /**\n     * @hidden\n     */\n\n\n    function wrapProp(prop, xhr) {\n      // TODO: Fix XHR types\n      if (prop in xhr && typeof xhr[prop] === 'function') {\n        fill(xhr, prop, function (original) {\n          return wrap(original, {\n            mechanism: {\n              data: {\n                \"function\": prop,\n                handler: original && original.name || '<anonymous>'\n              },\n              handled: true,\n              type: 'instrument'\n            }\n          });\n        });\n      }\n    }\n\n    var xhrproto = XMLHttpRequest.prototype;\n    fill(xhrproto, 'open', function (originalOpen) {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var url = args[1];\n        this.__sentry_xhr__ = {\n          method: isString(args[0]) ? args[0].toUpperCase() : args[0],\n          url: args[1]\n        };\n        var client = getCurrentHub().getClient();\n        var dsn = client && client.getDsn();\n\n        if (dsn) {\n          var filterUrl = new API(dsn).getStoreEndpoint(); // if Sentry key appears in URL, don't capture it as a request\n          // but rather as our own 'sentry' type breadcrumb\n\n          if (isString(url) && filterUrl && url.includes(filterUrl)) {\n            this.__sentry_own_request__ = true;\n          }\n        }\n\n        return originalOpen.apply(this, args);\n      };\n    });\n    fill(xhrproto, 'send', function (originalSend) {\n      return function () {\n        var args = [];\n\n        for (var _i = 0; _i < arguments.length; _i++) {\n          args[_i] = arguments[_i];\n        }\n\n        var xhr = this; // tslint:disable-line:no-this-assignment\n\n        if (xhr.__sentry_own_request__) {\n          addSentryBreadcrumb(args[0]);\n        }\n        /**\n         * @hidden\n         */\n\n\n        function onreadystatechangeHandler() {\n          if (xhr.readyState === 4) {\n            if (xhr.__sentry_own_request__) {\n              return;\n            }\n\n            try {\n              // touching statusCode in some platforms throws\n              // an exception\n              if (xhr.__sentry_xhr__) {\n                xhr.__sentry_xhr__.status_code = xhr.status;\n              }\n            } catch (e) {\n              /* do nothing */\n            }\n\n            Breadcrumbs.addBreadcrumb({\n              category: 'xhr',\n              data: xhr.__sentry_xhr__,\n              type: 'http'\n            }, {\n              xhr: xhr\n            });\n          }\n        }\n\n        ['onload', 'onerror', 'onprogress'].forEach(function (prop) {\n          wrapProp(prop, xhr);\n        });\n\n        if ('onreadystatechange' in xhr && typeof xhr.onreadystatechange === 'function') {\n          fill(xhr, 'onreadystatechange', function (original) {\n            return wrap(original, {\n              mechanism: {\n                data: {\n                  \"function\": 'onreadystatechange',\n                  handler: original && original.name || '<anonymous>'\n                },\n                handled: true,\n                type: 'instrument'\n              }\n            }, onreadystatechangeHandler);\n          });\n        } else {\n          // if onreadystatechange wasn't actually set by the page on this xhr, we\n          // are free to set our own and capture the breadcrumb\n          xhr.onreadystatechange = onreadystatechangeHandler;\n        }\n\n        return originalSend.apply(this, args);\n      };\n    });\n  };\n  /**\n   * Helper that checks if integration is enabled on the client.\n   * @param breadcrumb Breadcrumb\n   * @param hint BreadcrumbHint\n   */\n\n\n  Breadcrumbs.addBreadcrumb = function (breadcrumb, hint) {\n    if (getCurrentHub().getIntegration(Breadcrumbs)) {\n      getCurrentHub().addBreadcrumb(breadcrumb, hint);\n    }\n  };\n  /**\n   * Instrument browser built-ins w/ breadcrumb capturing\n   *  - Console API\n   *  - DOM API (click/typing)\n   *  - XMLHttpRequest API\n   *  - Fetch API\n   *  - History API\n   */\n\n\n  Breadcrumbs.prototype.setupOnce = function () {\n    if (this._options.console) {\n      this._instrumentConsole();\n    }\n\n    if (this._options.dom) {\n      this._instrumentDOM();\n    }\n\n    if (this._options.xhr) {\n      this._instrumentXHR();\n    }\n\n    if (this._options.fetch) {\n      this._instrumentFetch();\n    }\n\n    if (this._options.history) {\n      this._instrumentHistory();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Breadcrumbs.id = 'Breadcrumbs';\n  return Breadcrumbs;\n}();\n\nexport { Breadcrumbs };\n/** JSDoc */\n\nfunction addSentryBreadcrumb(serializedData) {\n  // There's always something that can go wrong with deserialization...\n  try {\n    var event_1 = JSON.parse(serializedData);\n    Breadcrumbs.addBreadcrumb({\n      category: 'sentry',\n      event_id: event_1.event_id,\n      level: event_1.level || Severity.fromString('error'),\n      message: getEventDescription(event_1)\n    }, {\n      event: event_1\n    });\n  } catch (_oO) {\n    logger.error('Error while adding sentry type breadcrumb');\n  }\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { getCurrentHub } from '@sentry/core';\nimport { Severity } from '@sentry/types';\nimport { addExceptionTypeValue, isPrimitive, isString, keysToEventMessage, logger, normalize, normalizeToSize, truncate } from '@sentry/utils';\nimport { shouldIgnoreOnError } from '../helpers';\nimport { eventFromStacktrace } from '../parsers';\nimport { _installGlobalHandler, _installGlobalUnhandledRejectionHandler, _subscribe } from '../tracekit';\n/** Global handlers */\n\nvar GlobalHandlers =\n/** @class */\nfunction () {\n  /** JSDoc */\n  function GlobalHandlers(options) {\n    /**\n     * @inheritDoc\n     */\n    this.name = GlobalHandlers.id;\n    this._options = tslib_1.__assign({\n      onerror: true,\n      onunhandledrejection: true\n    }, options);\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  GlobalHandlers.prototype.setupOnce = function () {\n    Error.stackTraceLimit = 50;\n\n    _subscribe(function (stack, _, error) {\n      if (shouldIgnoreOnError()) {\n        return;\n      }\n\n      var self = getCurrentHub().getIntegration(GlobalHandlers);\n\n      if (self) {\n        getCurrentHub().captureEvent(self._eventFromGlobalHandler(stack, error), {\n          data: {\n            stack: stack\n          },\n          originalException: error\n        });\n      }\n    });\n\n    if (this._options.onerror) {\n      logger.log('Global Handler attached: onerror');\n\n      _installGlobalHandler();\n    }\n\n    if (this._options.onunhandledrejection) {\n      logger.log('Global Handler attached: onunhandledrejection');\n\n      _installGlobalUnhandledRejectionHandler();\n    }\n  };\n  /**\n   * This function creates an Event from an TraceKitStackTrace.\n   *\n   * @param stacktrace TraceKitStackTrace to be converted to an Event.\n   */\n\n\n  GlobalHandlers.prototype._eventFromGlobalHandler = function (stacktrace, error) {\n    if (!isString(stacktrace.message) && stacktrace.mechanism !== 'onunhandledrejection') {\n      // There are cases where stacktrace.message is an Event object\n      // https://github.com/getsentry/sentry-javascript/issues/1949\n      // In this specific case we try to extract stacktrace.message.error.message\n      var message = stacktrace.message;\n      stacktrace.message = message.error && isString(message.error.message) ? message.error.message : 'No error message';\n    }\n\n    if (stacktrace.mechanism === 'onunhandledrejection' && stacktrace.incomplete) {\n      return this._eventFromIncompleteRejection(stacktrace, error);\n    }\n\n    var event = eventFromStacktrace(stacktrace);\n    var data = {\n      mode: stacktrace.mode\n    };\n\n    if (stacktrace.message) {\n      data.message = stacktrace.message;\n    }\n\n    if (stacktrace.name) {\n      data.name = stacktrace.name;\n    }\n\n    var client = getCurrentHub().getClient();\n    var maxValueLength = client && client.getOptions().maxValueLength || 250;\n    var fallbackValue = stacktrace.original ? truncate(JSON.stringify(normalize(stacktrace.original)), maxValueLength) : '';\n    var fallbackType = stacktrace.mechanism === 'onunhandledrejection' ? 'UnhandledRejection' : 'Error'; // This makes sure we have type/value in every exception\n\n    addExceptionTypeValue(event, fallbackValue, fallbackType, {\n      data: data,\n      handled: false,\n      type: stacktrace.mechanism\n    });\n    return event;\n  };\n  /**\n   * This function creates an Event from an TraceKitStackTrace that has part of it missing.\n   *\n   * @param stacktrace TraceKitStackTrace to be converted to an Event.\n   */\n\n\n  GlobalHandlers.prototype._eventFromIncompleteRejection = function (stacktrace, error) {\n    var event = {\n      level: Severity.Error\n    };\n\n    if (isPrimitive(error)) {\n      event.exception = {\n        values: [{\n          type: 'UnhandledRejection',\n          value: \"Non-Error promise rejection captured with value: \" + error\n        }]\n      };\n    } else {\n      event.exception = {\n        values: [{\n          type: 'UnhandledRejection',\n          value: \"Non-Error promise rejection captured with keys: \" + keysToEventMessage(Object.keys(error).sort())\n        }]\n      };\n      event.extra = {\n        __serialized__: normalizeToSize(error)\n      };\n    }\n\n    if (event.exception.values && event.exception.values[0]) {\n      event.exception.values[0].mechanism = {\n        data: tslib_1.__assign({\n          incomplete: true,\n          mode: stacktrace.mode\n        }, stacktrace.message && {\n          message: stacktrace.message\n        }, stacktrace.name && {\n          name: stacktrace.name\n        }),\n        handled: false,\n        type: stacktrace.mechanism\n      };\n    }\n\n    return event;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  GlobalHandlers.id = 'GlobalHandlers';\n  return GlobalHandlers;\n}();\n\nexport { GlobalHandlers };","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { exceptionFromStacktrace } from '../parsers';\nimport { _computeStackTrace } from '../tracekit';\nvar DEFAULT_KEY = 'cause';\nvar DEFAULT_LIMIT = 5;\n/** Adds SDK info to an event. */\n\nvar LinkedErrors =\n/** @class */\nfunction () {\n  /**\n   * @inheritDoc\n   */\n  function LinkedErrors(options) {\n    if (options === void 0) {\n      options = {};\n    }\n    /**\n     * @inheritDoc\n     */\n\n\n    this.name = LinkedErrors.id;\n    this._key = options.key || DEFAULT_KEY;\n    this._limit = options.limit || DEFAULT_LIMIT;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event, hint) {\n      var self = getCurrentHub().getIntegration(LinkedErrors);\n\n      if (self) {\n        return self._handler(event, hint);\n      }\n\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.prototype._handler = function (event, hint) {\n    if (!event.exception || !event.exception.values || !hint || !(hint.originalException instanceof Error)) {\n      return event;\n    }\n\n    var linkedErrors = this._walkErrorTree(hint.originalException, this._key);\n\n    event.exception.values = tslib_1.__spread(linkedErrors, event.exception.values);\n    return event;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.prototype._walkErrorTree = function (error, key, stack) {\n    if (stack === void 0) {\n      stack = [];\n    }\n\n    if (!(error[key] instanceof Error) || stack.length + 1 >= this._limit) {\n      return stack;\n    }\n\n    var stacktrace = _computeStackTrace(error[key]);\n\n    var exception = exceptionFromStacktrace(stacktrace);\n    return this._walkErrorTree(error[key], key, tslib_1.__spread([exception], stack));\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  LinkedErrors.id = 'LinkedErrors';\n  return LinkedErrors;\n}();\n\nexport { LinkedErrors };","import \"core-js/modules/es6.function.name\";\nimport * as tslib_1 from \"tslib\";\nimport { addGlobalEventProcessor, getCurrentHub } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nvar global = getGlobalObject();\n/** UserAgent */\n\nvar UserAgent =\n/** @class */\nfunction () {\n  function UserAgent() {\n    /**\n     * @inheritDoc\n     */\n    this.name = UserAgent.id;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  UserAgent.prototype.setupOnce = function () {\n    addGlobalEventProcessor(function (event) {\n      if (getCurrentHub().getIntegration(UserAgent)) {\n        if (!global.navigator || !global.location) {\n          return event;\n        } // HTTP Interface: https://docs.sentry.io/clientdev/interfaces/http/?platform=javascript\n\n\n        var request = event.request || {};\n        request.url = request.url || global.location.href;\n        request.headers = request.headers || {};\n        request.headers['User-Agent'] = global.navigator.userAgent;\n        return tslib_1.__assign({}, event, {\n          request: request\n        });\n      }\n\n      return event;\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  UserAgent.id = 'UserAgent';\n  return UserAgent;\n}();\n\nexport { UserAgent };","import \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.to-string\";\nimport { getCurrentHub, initAndBind, Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport { BrowserClient } from './client';\nimport { wrap as internalWrap } from './helpers';\nimport { Breadcrumbs, GlobalHandlers, LinkedErrors, TryCatch, UserAgent } from './integrations';\nexport var defaultIntegrations = [new CoreIntegrations.InboundFilters(), new CoreIntegrations.FunctionToString(), new TryCatch(), new Breadcrumbs(), new GlobalHandlers(), new LinkedErrors(), new UserAgent()];\n/**\n * The Sentry Browser SDK Client.\n *\n * To use this SDK, call the {@link init} function as early as possible when\n * loading the web page. To set context information or send manual events, use\n * the provided methods.\n *\n * @example\n *\n * ```\n *\n * import { init } from '@sentry/browser';\n *\n * init({\n *   dsn: '__DSN__',\n *   // ...\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { configureScope } from '@sentry/browser';\n * configureScope((scope: Scope) => {\n *   scope.setExtra({ battery: 0.7 });\n *   scope.setTag({ user_mode: 'admin' });\n *   scope.setUser({ id: '4711' });\n * });\n * ```\n *\n * @example\n * ```\n *\n * import { addBreadcrumb } from '@sentry/browser';\n * addBreadcrumb({\n *   message: 'My Breadcrumb',\n *   // ...\n * });\n * ```\n *\n * @example\n *\n * ```\n *\n * import * as Sentry from '@sentry/browser';\n * Sentry.captureMessage('Hello, world!');\n * Sentry.captureException(new Error('Good bye'));\n * Sentry.captureEvent({\n *   message: 'Manual',\n *   stacktrace: [\n *     // ...\n *   ],\n * });\n * ```\n *\n * @see {@link BrowserOptions} for documentation on configuration options.\n */\n\nexport function init(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (options.defaultIntegrations === undefined) {\n    options.defaultIntegrations = defaultIntegrations;\n  }\n\n  if (options.release === undefined) {\n    var window_1 = getGlobalObject(); // This supports the variable that sentry-webpack-plugin injects\n\n    if (window_1.SENTRY_RELEASE && window_1.SENTRY_RELEASE.id) {\n      options.release = window_1.SENTRY_RELEASE.id;\n    }\n  }\n\n  initAndBind(BrowserClient, options);\n}\n/**\n * Present the user with a report dialog.\n *\n * @param options Everything is optional, we try to fetch all info need from the global scope.\n */\n\nexport function showReportDialog(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!options.eventId) {\n    options.eventId = getCurrentHub().lastEventId();\n  }\n\n  var client = getCurrentHub().getClient();\n\n  if (client) {\n    client.showReportDialog(options);\n  }\n}\n/**\n * This is the getter for lastEventId.\n *\n * @returns The last event id of a captured event.\n */\n\nexport function lastEventId() {\n  return getCurrentHub().lastEventId();\n}\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\n\nexport function forceLoad() {} // Noop\n\n/**\n * This function is here to be API compatible with the loader.\n * @hidden\n */\n\nexport function onLoad(callback) {\n  callback();\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\n\nexport function flush(timeout) {\n  var client = getCurrentHub().getClient();\n\n  if (client) {\n    return client.flush(timeout);\n  }\n\n  return Promise.reject(false);\n}\n/**\n * A promise that resolves when all current events have been sent.\n * If you provide a timeout and the queue takes longer to drain the promise returns false.\n *\n * @param timeout Maximum time in ms the client should wait.\n */\n\nexport function close(timeout) {\n  var client = getCurrentHub().getClient();\n\n  if (client) {\n    return client.close(timeout);\n  }\n\n  return Promise.reject(false);\n}\n/**\n * Wrap code within a try/catch block so the SDK is able to capture errors.\n *\n * @param fn A function to wrap.\n *\n * @returns The result of wrapped function call.\n */\n\nexport function wrap(fn) {\n  // tslint:disable-next-line: no-unsafe-any\n  return internalWrap(fn)();\n}","import { getCurrentHub } from '@sentry/hub';\nimport { logger } from '@sentry/utils';\n/**\n * Internal function to create a new SDK client instance. The client is\n * installed and then bound to the current scope.\n *\n * @param clientClass The client class to instanciate.\n * @param options Options to pass to the client.\n */\n\nexport function initAndBind(clientClass, options) {\n  if (options.debug === true) {\n    logger.enable();\n  }\n\n  getCurrentHub().bindClient(new clientClass(options));\n}","import * as tslib_1 from \"tslib\";\nexport { Severity, Status } from '@sentry/types';\nexport { addGlobalEventProcessor, addBreadcrumb, captureException, captureEvent, captureMessage, configureScope, getHubFromCarrier, getCurrentHub, Hub, Scope, setContext, setExtra, setExtras, setTag, setTags, setUser, Span, withScope } from '@sentry/core';\nexport { BrowserClient } from './client';\nexport { defaultIntegrations, forceLoad, init, lastEventId, onLoad, showReportDialog, flush, close, wrap } from './sdk';\nexport { SDK_NAME, SDK_VERSION } from './version';\nimport { Integrations as CoreIntegrations } from '@sentry/core';\nimport { getGlobalObject } from '@sentry/utils';\nimport * as BrowserIntegrations from './integrations';\nimport * as Transports from './transports';\nvar windowIntegrations = {}; // This block is needed to add compatibility with the integrations packages when used with a CDN\n// tslint:disable: no-unsafe-any\n\nvar _window = getGlobalObject();\n\nif (_window.Sentry && _window.Sentry.Integrations) {\n  windowIntegrations = _window.Sentry.Integrations;\n} // tslint:enable: no-unsafe-any\n\n\nvar INTEGRATIONS = tslib_1.__assign({}, windowIntegrations, CoreIntegrations, BrowserIntegrations);\n\nexport { INTEGRATIONS as Integrations, Transports };","import * as tslib_1 from \"tslib\";\nimport { consoleSandbox, dynamicRequire, getGlobalObject, logger, uuid4 } from '@sentry/utils';\nimport { Scope } from './scope';\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be incresed when the global interface\n * changes a and new methods are introduced.\n *\n * @hidden\n */\n\nexport var API_VERSION = 3;\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\n\nvar DEFAULT_BREADCRUMBS = 30;\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\n\nvar MAX_BREADCRUMBS = 100;\n/**\n * @inheritDoc\n */\n\nvar Hub =\n/** @class */\nfunction () {\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  function Hub(client, scope, _version) {\n    if (scope === void 0) {\n      scope = new Scope();\n    }\n\n    if (_version === void 0) {\n      _version = API_VERSION;\n    }\n\n    this._version = _version;\n    /** Is a {@link Layer}[] containing the client and scope */\n\n    this._stack = [];\n\n    this._stack.push({\n      client: client,\n      scope: scope\n    });\n  }\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n\n\n  Hub.prototype._invokeClient = function (method) {\n    var _a;\n\n    var args = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n\n    var top = this.getStackTop();\n\n    if (top && top.client && top.client[method]) {\n      (_a = top.client)[method].apply(_a, tslib_1.__spread(args, [top.scope]));\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.isOlderThan = function (version) {\n    return this._version < version;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.bindClient = function (client) {\n    var top = this.getStackTop();\n    top.client = client;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.pushScope = function () {\n    // We want to clone the content of prev scope\n    var stack = this.getStack();\n    var parentScope = stack.length > 0 ? stack[stack.length - 1].scope : undefined;\n    var scope = Scope.clone(parentScope);\n    this.getStack().push({\n      client: this.getClient(),\n      scope: scope\n    });\n    return scope;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.popScope = function () {\n    return this.getStack().pop() !== undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.withScope = function (callback) {\n    var scope = this.pushScope();\n\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.getClient = function () {\n    return this.getStackTop().client;\n  };\n  /** Returns the scope of the top stack. */\n\n\n  Hub.prototype.getScope = function () {\n    return this.getStackTop().scope;\n  };\n  /** Returns the scope stack for domains or the process. */\n\n\n  Hub.prototype.getStack = function () {\n    return this._stack;\n  };\n  /** Returns the topmost scope layer in the order domain > local > process. */\n\n\n  Hub.prototype.getStackTop = function () {\n    return this._stack[this._stack.length - 1];\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureException = function (exception, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint; // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n\n    if (!hint) {\n      var syntheticException = void 0;\n\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception;\n      }\n\n      finalHint = {\n        originalException: exception,\n        syntheticException: syntheticException\n      };\n    }\n\n    this._invokeClient('captureException', exception, tslib_1.__assign({}, finalHint, {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureMessage = function (message, level, hint) {\n    var eventId = this._lastEventId = uuid4();\n    var finalHint = hint; // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n\n    if (!hint) {\n      var syntheticException = void 0;\n\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception;\n      }\n\n      finalHint = {\n        originalException: message,\n        syntheticException: syntheticException\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, tslib_1.__assign({}, finalHint, {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.captureEvent = function (event, hint) {\n    var eventId = this._lastEventId = uuid4();\n\n    this._invokeClient('captureEvent', event, tslib_1.__assign({}, hint, {\n      event_id: eventId\n    }));\n\n    return eventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.lastEventId = function () {\n    return this._lastEventId;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.addBreadcrumb = function (breadcrumb, hint) {\n    var top = this.getStackTop();\n\n    if (!top.scope || !top.client) {\n      return;\n    }\n\n    var _a = top.client.getOptions && top.client.getOptions() || {},\n        _b = _a.beforeBreadcrumb,\n        beforeBreadcrumb = _b === void 0 ? null : _b,\n        _c = _a.maxBreadcrumbs,\n        maxBreadcrumbs = _c === void 0 ? DEFAULT_BREADCRUMBS : _c;\n\n    if (maxBreadcrumbs <= 0) {\n      return;\n    }\n\n    var timestamp = new Date().getTime() / 1000;\n\n    var mergedBreadcrumb = tslib_1.__assign({\n      timestamp: timestamp\n    }, breadcrumb);\n\n    var finalBreadcrumb = beforeBreadcrumb ? consoleSandbox(function () {\n      return beforeBreadcrumb(mergedBreadcrumb, hint);\n    }) : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) {\n      return;\n    }\n\n    top.scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setUser = function (user) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setUser(user);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setTags = function (tags) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setTags(tags);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setExtras = function (extras) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setExtras(extras);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setTag = function (key, value) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setTag(key, value);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setExtra = function (key, extra) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setExtra(key, extra);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.setContext = function (name, context) {\n    var top = this.getStackTop();\n\n    if (!top.scope) {\n      return;\n    }\n\n    top.scope.setContext(name, context);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.configureScope = function (callback) {\n    var top = this.getStackTop();\n\n    if (top.scope && top.client) {\n      callback(top.scope);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.run = function (callback) {\n    var oldHub = makeMain(this);\n\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.getIntegration = function (integration) {\n    var client = this.getClient();\n\n    if (!client) {\n      return null;\n    }\n\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(\"Cannot retrieve integration \" + integration.id + \" from the current Hub\");\n      return null;\n    }\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Hub.prototype.traceHeaders = function () {\n    var top = this.getStackTop();\n\n    if (top.scope && top.client) {\n      var span = top.scope.getSpan();\n\n      if (span) {\n        return {\n          'sentry-trace': span.toTraceparent()\n        };\n      }\n    }\n\n    return {};\n  };\n\n  return Hub;\n}();\n\nexport { Hub };\n/** Returns the global shim registry. */\n\nexport function getMainCarrier() {\n  var carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    hub: undefined\n  };\n  return carrier;\n}\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\n\nexport function makeMain(hub) {\n  var registry = getMainCarrier();\n  var oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\n\nexport function getCurrentHub() {\n  // Get main carrier (global for every environment)\n  var registry = getMainCarrier(); // If there's no hub, or its an old API, assign a new one\n\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  } // Prefer domains over global if they are there\n\n\n  try {\n    // We need to use `dynamicRequire` because `require` on it's own will be optimized by webpack.\n    // We do not want this to happen, we need to try to `require` the domain node module and fail if we are in browser\n    // for example so we do not have to shim it and use `getCurrentHub` universally.\n    var domain = dynamicRequire(module, 'domain');\n    var activeDomain = domain.active; // If there no active domain, just return global hub\n\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    } // If there's no hub on current domain, or its an old API, assign a new one\n\n\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      var registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    } // Return hub that lives on a domain\n\n\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\n\nfunction hasHubOnCarrier(carrier) {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\n\n\nexport function getHubFromCarrier(carrier) {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) {\n    return carrier.__SENTRY__.hub;\n  }\n\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n */\n\nexport function setHubOnCarrier(carrier, hub) {\n  if (!carrier) {\n    return false;\n  }\n\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.for-each\";\nimport * as tslib_1 from \"tslib\";\nimport { getGlobalObject, isThenable, normalize, SyncPromise } from '@sentry/utils';\nimport { Span } from './span';\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\n\nvar Scope =\n/** @class */\nfunction () {\n  function Scope() {\n    /** Flag if notifiying is happening. */\n    this._notifyingListeners = false;\n    /** Callback for client to receive scope changes. */\n\n    this._scopeListeners = [];\n    /** Callback list that will be called after {@link applyToEvent}. */\n\n    this._eventProcessors = [];\n    /** Array of breadcrumbs. */\n\n    this._breadcrumbs = [];\n    /** User */\n\n    this._user = {};\n    /** Tags */\n\n    this._tags = {};\n    /** Extra */\n\n    this._extra = {};\n    /** Contexts */\n\n    this._context = {};\n  }\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n\n\n  Scope.prototype.addScopeListener = function (callback) {\n    this._scopeListeners.push(callback);\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.addEventProcessor = function (callback) {\n    this._eventProcessors.push(callback);\n\n    return this;\n  };\n  /**\n   * This will be called on every set call.\n   */\n\n\n  Scope.prototype._notifyScopeListeners = function () {\n    var _this = this;\n\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      setTimeout(function () {\n        _this._scopeListeners.forEach(function (callback) {\n          callback(_this);\n        });\n\n        _this._notifyingListeners = false;\n      });\n    }\n  };\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n\n\n  Scope.prototype._notifyEventProcessors = function (processors, event, hint, index) {\n    var _this = this;\n\n    if (index === void 0) {\n      index = 0;\n    }\n\n    return new SyncPromise(function (resolve, reject) {\n      var processor = processors[index]; // tslint:disable-next-line:strict-type-predicates\n\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        var result = processor(tslib_1.__assign({}, event), hint);\n\n        if (isThenable(result)) {\n          result.then(function (_final) {\n            return _this._notifyEventProcessors(processors, _final, hint, index + 1).then(resolve);\n          })[\"catch\"](reject);\n        } else {\n          _this._notifyEventProcessors(processors, result, hint, index + 1).then(resolve)[\"catch\"](reject);\n        }\n      }\n    });\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setUser = function (user) {\n    this._user = normalize(user);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setTags = function (tags) {\n    this._tags = tslib_1.__assign({}, this._tags, normalize(tags));\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setTag = function (key, value) {\n    var _a;\n\n    this._tags = tslib_1.__assign({}, this._tags, (_a = {}, _a[key] = normalize(value), _a));\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setExtras = function (extra) {\n    this._extra = tslib_1.__assign({}, this._extra, normalize(extra));\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setExtra = function (key, extra) {\n    var _a;\n\n    this._extra = tslib_1.__assign({}, this._extra, (_a = {}, _a[key] = normalize(extra), _a));\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setFingerprint = function (fingerprint) {\n    this._fingerprint = normalize(fingerprint);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setLevel = function (level) {\n    this._level = normalize(level);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setTransaction = function (transaction) {\n    this._transaction = transaction;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setContext = function (name, context) {\n    this._context[name] = context ? normalize(context) : undefined;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.setSpan = function (span) {\n    this._span = span;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.startSpan = function (parentSpan) {\n    var span = new Span();\n    span.setParent(parentSpan);\n    this.setSpan(span);\n    return span;\n  };\n  /**\n   * Internal getter for Span, used in Hub.\n   * @hidden\n   */\n\n\n  Scope.prototype.getSpan = function () {\n    return this._span;\n  };\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n\n\n  Scope.clone = function (scope) {\n    var newScope = new Scope();\n    Object.assign(newScope, scope, {\n      _scopeListeners: []\n    });\n\n    if (scope) {\n      newScope._breadcrumbs = tslib_1.__spread(scope._breadcrumbs);\n      newScope._tags = tslib_1.__assign({}, scope._tags);\n      newScope._extra = tslib_1.__assign({}, scope._extra);\n      newScope._context = tslib_1.__assign({}, scope._context);\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._transaction = scope._transaction;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = tslib_1.__spread(scope._eventProcessors);\n    }\n\n    return newScope;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.clear = function () {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._context = {};\n    this._level = undefined;\n    this._transaction = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.addBreadcrumb = function (breadcrumb, maxBreadcrumbs) {\n    var timestamp = new Date().getTime() / 1000;\n\n    var mergedBreadcrumb = tslib_1.__assign({\n      timestamp: timestamp\n    }, breadcrumb);\n\n    this._breadcrumbs = maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0 ? tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]).slice(-maxBreadcrumbs) : tslib_1.__spread(this._breadcrumbs, [normalize(mergedBreadcrumb)]);\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Scope.prototype.clearBreadcrumbs = function () {\n    this._breadcrumbs = [];\n\n    this._notifyScopeListeners();\n\n    return this;\n  };\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n\n\n  Scope.prototype._applyFingerprint = function (event) {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint ? Array.isArray(event.fingerprint) ? event.fingerprint : [event.fingerprint] : []; // If we have something on the scope, then merge it with event\n\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    } // If we have no data at all, remove empty array default\n\n\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  };\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n\n\n  Scope.prototype.applyToEvent = function (event, hint) {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = tslib_1.__assign({}, this._extra, event.extra);\n    }\n\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = tslib_1.__assign({}, this._tags, event.tags);\n    }\n\n    if (this._user && Object.keys(this._user).length) {\n      event.user = tslib_1.__assign({}, this._user, event.user);\n    }\n\n    if (this._context && Object.keys(this._context).length) {\n      event.contexts = tslib_1.__assign({}, this._context, event.contexts);\n    }\n\n    if (this._level) {\n      event.level = this._level;\n    }\n\n    if (this._transaction) {\n      event.transaction = this._transaction;\n    }\n\n    if (this._span) {\n      event.contexts = event.contexts || {};\n      event.contexts.trace = this._span;\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = tslib_1.__spread(event.breadcrumbs || [], this._breadcrumbs);\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n    return this._notifyEventProcessors(tslib_1.__spread(getGlobalEventProcessors(), this._eventProcessors), event, hint);\n  };\n\n  return Scope;\n}();\n\nexport { Scope };\n/**\n * Retruns the global event processors.\n */\n\nfunction getGlobalEventProcessors() {\n  var global = getGlobalObject();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n}\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\n\n\nexport function addGlobalEventProcessor(callback) {\n  getGlobalEventProcessors().push(callback);\n}","import \"core-js/modules/es6.date.to-json\";\nimport \"core-js/modules/es6.regexp.match\";\nimport { uuid4 } from '@sentry/utils';\nexport var TRACEPARENT_REGEXP = /^[ \\t]*([0-9a-f]{32})?-?([0-9a-f]{16})?-?([01])?[ \\t]*$/;\n/**\n * Span containg all data about a span\n */\n\nvar Span =\n/** @class */\nfunction () {\n  function Span(_traceId, _spanId, _sampled, _parent) {\n    if (_traceId === void 0) {\n      _traceId = uuid4();\n    }\n\n    if (_spanId === void 0) {\n      _spanId = uuid4().substring(16);\n    }\n\n    this._traceId = _traceId;\n    this._spanId = _spanId;\n    this._sampled = _sampled;\n    this._parent = _parent;\n  }\n  /**\n   * Setter for parent\n   */\n\n\n  Span.prototype.setParent = function (parent) {\n    this._parent = parent;\n    return this;\n  };\n  /**\n   * Setter for sampled\n   */\n\n\n  Span.prototype.setSampled = function (sampled) {\n    this._sampled = sampled;\n    return this;\n  };\n  /**\n   * Continues a trace\n   * @param traceparent Traceparent string\n   */\n\n\n  Span.fromTraceparent = function (traceparent) {\n    var matches = traceparent.match(TRACEPARENT_REGEXP);\n\n    if (matches) {\n      var sampled = void 0;\n\n      if (matches[3] === '1') {\n        sampled = true;\n      } else if (matches[3] === '0') {\n        sampled = false;\n      }\n\n      var parent_1 = new Span(matches[1], matches[2], sampled);\n      return new Span(matches[1], undefined, sampled, parent_1);\n    }\n\n    return undefined;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.toTraceparent = function () {\n    var sampled = '';\n\n    if (this._sampled === true) {\n      sampled = '-1';\n    } else if (this._sampled === false) {\n      sampled = '-0';\n    }\n\n    return this._traceId + \"-\" + this._spanId + sampled;\n  };\n  /**\n   * @inheritDoc\n   */\n\n\n  Span.prototype.toJSON = function () {\n    return {\n      parent: this._parent && this._parent.toJSON() || undefined,\n      sampled: this._sampled,\n      span_id: this._spanId,\n      trace_id: this._traceId\n    };\n  };\n\n  return Span;\n}();\n\nexport { Span };","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat) {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n\n    case '[object Exception]':\n      return true;\n\n    case '[object DOMException]':\n      return true;\n\n    default:\n      return wat instanceof Error;\n  }\n}\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isErrorEvent(wat) {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isDOMError(wat) {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isDOMException(wat) {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isString(wat) {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isPrimitive(wat) {\n  return wat === null || typeof wat !== 'object' && typeof wat !== 'function';\n}\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isPlainObject(wat) {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isRegExp(wat) {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\n\nexport function isThenable(wat) {\n  // tslint:disable:no-unsafe-any\n  return Boolean(wat && wat.then && typeof wat.then === 'function'); // tslint:enable:no-unsafe-any\n}\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\n\nexport function isSyntheticEvent(wat) {\n  // tslint:disable-next-line:no-unsafe-any\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}","'use strict';\nvar $export = require('./_export');\nvar toObject = require('./_to-object');\nvar toPrimitive = require('./_to-primitive');\n\n$export($export.P + $export.F * require('./_fails')(function () {\n  return new Date(NaN).toJSON() !== null\n    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;\n}), 'Date', {\n  // eslint-disable-next-line no-unused-vars\n  toJSON: function toJSON(key) {\n    var O = toObject(this);\n    var pv = toPrimitive(O);\n    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();\n  }\n});\n","// 20.1.2.4 Number.isNaN(number)\nvar $export = require('./_export');\n\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    // eslint-disable-next-line no-self-compare\n    return number != number;\n  }\n});\n","var $export = require('./_export');\n// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', { defineProperties: require('./_object-dps') });\n","import \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.typed.uint16-array\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\n\n/**\n * Requires a module which is protected _against bundler minification.\n *\n * @param request The module path to resolve\n */\nexport function dynamicRequire(mod, request) {\n  // tslint:disable-next-line: no-unsafe-any\n  return mod.require(request);\n}\n/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\n\nexport function isNodeEnv() {\n  // tslint:disable:strict-type-predicates\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\nvar fallbackGlobalObject = {};\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\n\nexport function getGlobalObject() {\n  return isNodeEnv() ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : fallbackGlobalObject;\n}\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\n\nexport function uuid4() {\n  var global = getGlobalObject();\n  var crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    var arr = new Uint16Array(8);\n    crypto.getRandomValues(arr); // set 4 in byte 7\n    // tslint:disable-next-line:no-bitwise\n\n    arr[3] = arr[3] & 0xfff | 0x4000; // set 2 most significant bits of byte 9 to '10'\n    // tslint:disable-next-line:no-bitwise\n\n    arr[4] = arr[4] & 0x3fff | 0x8000;\n\n    var pad = function pad(num) {\n      var v = num.toString(16);\n\n      while (v.length < 4) {\n        v = \"0\" + v;\n      }\n\n      return v;\n    };\n\n    return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n  } // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n\n\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    // tslint:disable-next-line:no-bitwise\n    var r = Math.random() * 16 | 0; // tslint:disable-next-line:no-bitwise\n\n    var v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\n\nexport function parseUrl(url) {\n  if (!url) {\n    return {};\n  }\n\n  var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  } // coerce to undefined values to empty string so we don't get 'undefined'\n\n\n  var query = match[6] || '';\n  var fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment\n  };\n}\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\n\nexport function getEventDescription(event) {\n  if (event.message) {\n    return event.message;\n  }\n\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    var exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return exception.type + \": \" + exception.value;\n    }\n\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n\n  return event.event_id || '<unknown>';\n}\n/** JSDoc */\n\nexport function consoleSandbox(callback) {\n  var global = getGlobalObject();\n  var levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  var originalConsole = global.console;\n  var wrappedLevels = {}; // Restore all wrapped console methods\n\n  levels.forEach(function (level) {\n    if (level in global.console && originalConsole[level].__sentry__) {\n      wrappedLevels[level] = originalConsole[level].__sentry_wrapped__;\n      originalConsole[level] = originalConsole[level].__sentry_original__;\n    }\n  }); // Perform callback manipulations\n\n  var result = callback(); // Revert restoration to wrapped state\n\n  Object.keys(wrappedLevels).forEach(function (level) {\n    originalConsole[level] = wrappedLevels[level];\n  });\n  return result;\n}\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @param mechanism Mechanism of the exception.\n * @hidden\n */\n\nexport function addExceptionTypeValue(event, value, type, mechanism) {\n  if (mechanism === void 0) {\n    mechanism = {\n      handled: true,\n      type: 'generic'\n    };\n  }\n\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n  event.exception.values[0].mechanism = event.exception.values[0].mechanism || mechanism;\n}","require(\"core-js/modules/es6.object.define-property\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nmodule.exports = function (originalModule) {\n  if (!originalModule.webpackPolyfill) {\n    var module = Object.create(originalModule); // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    Object.defineProperty(module, \"exports\", {\n      enumerable: true\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.weak-set\";\n\n// tslint:disable:no-unsafe-any\n\n/**\n * Memo class used for decycle json objects. Uses WeakSet if available otherwise array.\n */\nvar Memo =\n/** @class */\nfunction () {\n  function Memo() {\n    // tslint:disable-next-line\n    this._hasWeakSet = typeof WeakSet === 'function';\n    this._inner = this._hasWeakSet ? new WeakSet() : [];\n  }\n  /**\n   * Sets obj to remember.\n   * @param obj Object to remember\n   */\n\n\n  Memo.prototype.memoize = function (obj) {\n    if (this._hasWeakSet) {\n      if (this._inner.has(obj)) {\n        return true;\n      }\n\n      this._inner.add(obj);\n\n      return false;\n    } // tslint:disable-next-line:prefer-for-of\n\n\n    for (var i = 0; i < this._inner.length; i++) {\n      var value = this._inner[i];\n\n      if (value === obj) {\n        return true;\n      }\n    }\n\n    this._inner.push(obj);\n\n    return false;\n  };\n  /**\n   * Removes object from internal storage.\n   * @param obj Object to forget\n   */\n\n\n  Memo.prototype.unmemoize = function (obj) {\n    if (this._hasWeakSet) {\n      this._inner[\"delete\"](obj);\n    } else {\n      for (var i = 0; i < this._inner.length; i++) {\n        if (this._inner[i] === obj) {\n          this._inner.splice(i, 1);\n\n          break;\n        }\n      }\n    }\n  };\n\n  return Memo;\n}();\n\nexport { Memo };","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","require('./_typed-array')('Uint16', 2, function (init) {\n  return function Uint16Array(data, byteOffset, length) {\n    return init(this, data, byteOffset, length);\n  };\n});\n","import { consoleSandbox, getGlobalObject } from './misc'; // TODO: Implement different loggers for different environments\n\nvar global = getGlobalObject();\n/** Prefix for logging strings */\n\nvar PREFIX = 'Sentry Logger ';\n/** JSDoc */\n\nvar Logger =\n/** @class */\nfunction () {\n  /** JSDoc */\n  function Logger() {\n    this._enabled = false;\n  }\n  /** JSDoc */\n\n\n  Logger.prototype.disable = function () {\n    this._enabled = false;\n  };\n  /** JSDoc */\n\n\n  Logger.prototype.enable = function () {\n    this._enabled = true;\n  };\n  /** JSDoc */\n\n\n  Logger.prototype.log = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!this._enabled) {\n      return;\n    }\n\n    consoleSandbox(function () {\n      global.console.log(PREFIX + \"[Log]: \" + args.join(' ')); // tslint:disable-line:no-console\n    });\n  };\n  /** JSDoc */\n\n\n  Logger.prototype.warn = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!this._enabled) {\n      return;\n    }\n\n    consoleSandbox(function () {\n      global.console.warn(PREFIX + \"[Warn]: \" + args.join(' ')); // tslint:disable-line:no-console\n    });\n  };\n  /** JSDoc */\n\n\n  Logger.prototype.error = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (!this._enabled) {\n      return;\n    }\n\n    consoleSandbox(function () {\n      global.console.error(PREFIX + \"[Error]: \" + args.join(' ')); // tslint:disable-line:no-console\n    });\n  };\n\n  return Logger;\n}(); // Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\n\n\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nvar logger = global.__SENTRY__.logger || (global.__SENTRY__.logger = new Logger());\nexport { logger };","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.for-each\";\nimport { isThenable } from './is';\n/** SyncPromise internal states */\n\nvar States;\n\n(function (States) {\n  /** Pending */\n  States[\"PENDING\"] = \"PENDING\";\n  /** Resolved / OK */\n\n  States[\"RESOLVED\"] = \"RESOLVED\";\n  /** Rejected / Error */\n\n  States[\"REJECTED\"] = \"REJECTED\";\n})(States || (States = {}));\n/** JSDoc */\n\n\nvar SyncPromise =\n/** @class */\nfunction () {\n  function SyncPromise(callback) {\n    var _this = this;\n    /** JSDoc */\n\n\n    this._state = States.PENDING;\n    /** JSDoc */\n\n    this._handlers = [];\n    /** JSDoc */\n\n    this._resolve = function (value) {\n      _this._setResult(value, States.RESOLVED);\n    };\n    /** JSDoc */\n\n\n    this._reject = function (reason) {\n      _this._setResult(reason, States.REJECTED);\n    };\n    /** JSDoc */\n\n\n    this._setResult = function (value, state) {\n      if (_this._state !== States.PENDING) {\n        return;\n      }\n\n      if (isThenable(value)) {\n        value.then(_this._resolve, _this._reject);\n        return;\n      }\n\n      _this._value = value;\n      _this._state = state;\n\n      _this._executeHandlers();\n    };\n    /** JSDoc */\n\n\n    this._executeHandlers = function () {\n      if (_this._state === States.PENDING) {\n        return;\n      }\n\n      if (_this._state === States.REJECTED) {\n        // tslint:disable-next-line:no-unsafe-any\n        _this._handlers.forEach(function (h) {\n          return h.onFail && h.onFail(_this._value);\n        });\n      } else {\n        // tslint:disable-next-line:no-unsafe-any\n        _this._handlers.forEach(function (h) {\n          return h.onSuccess && h.onSuccess(_this._value);\n        });\n      }\n\n      _this._handlers = [];\n      return;\n    };\n    /** JSDoc */\n\n\n    this._attachHandler = function (handler) {\n      _this._handlers = _this._handlers.concat(handler);\n\n      _this._executeHandlers();\n    };\n\n    try {\n      callback(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n  /** JSDoc */\n\n\n  SyncPromise.prototype.then = function (onfulfilled, onrejected) {\n    var _this = this; // public then<U>(onSuccess?: HandlerOnSuccess<T, U>, onFail?: HandlerOnFail<U>): SyncPromise<T | U> {\n\n\n    return new SyncPromise(function (resolve, reject) {\n      _this._attachHandler({\n        onFail: function onFail(reason) {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onSuccess: function onSuccess(result) {\n          if (!onfulfilled) {\n            resolve(result);\n            return;\n          }\n\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        }\n      });\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype[\"catch\"] = function (onFail) {\n    // tslint:disable-next-line:no-unsafe-any\n    return this.then(function (val) {\n      return val;\n    }, onFail);\n  };\n  /** JSDoc */\n\n\n  SyncPromise.prototype.toString = function () {\n    return \"[object SyncPromise]\";\n  };\n  /** JSDoc */\n\n\n  SyncPromise.resolve = function (value) {\n    return new SyncPromise(function (resolve) {\n      resolve(value);\n    });\n  };\n  /** JSDoc */\n\n\n  SyncPromise.reject = function (reason) {\n    return new SyncPromise(function (_, reject) {\n      reject(reason);\n    });\n  };\n\n  return SyncPromise;\n}();\n\nexport { SyncPromise };","import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.date.to-json\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/es6.number.is-nan\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es6.function.name\";\nimport { isError, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacement A function that should be used to wrap a given method.\n * @returns void\n */\n\nexport function fill(source, name, replacement) {\n  if (!(name in source)) {\n    return;\n  }\n\n  var original = source[name];\n  var wrapped = replacement(original); // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  // tslint:disable-next-line:strict-type-predicates\n\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry__: {\n          enumerable: false,\n          value: true\n        },\n        __sentry_original__: {\n          enumerable: false,\n          value: original\n        },\n        __sentry_wrapped__: {\n          enumerable: false,\n          value: wrapped\n        }\n      });\n    } catch (_Oo) {// This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\n\nexport function urlEncode(object) {\n  return Object.keys(object).map( // tslint:disable-next-line:no-unsafe-any\n  function (key) {\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(object[key]);\n  }).join('&');\n}\n/**\n * Transforms Error object into an object literal with all it's attributes\n * attached to it.\n *\n * Based on: https://github.com/ftlabs/js-abbreviate/blob/fa709e5f139e7770a71827b1893f22418097fbda/index.js#L95-L106\n *\n * @param error An Error containing all relevant information\n * @returns An object with all error properties\n */\n\nfunction objectifyError(error) {\n  // These properties are implemented as magical getters and don't show up in `for-in` loop\n  var err = {\n    message: error.message,\n    name: error.name,\n    stack: error.stack\n  };\n\n  for (var i in error) {\n    if (Object.prototype.hasOwnProperty.call(error, i)) {\n      err[i] = error[i];\n    }\n  }\n\n  return err;\n}\n/** Calculates bytes size of input string */\n\n\nfunction utf8Length(value) {\n  // tslint:disable-next-line:no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n/** Calculates bytes size of input object */\n\n\nfunction jsonSize(value) {\n  return utf8Length(JSON.stringify(value));\n}\n/** JSDoc */\n\n\nexport function normalizeToSize(object, // Default Node.js REPL depth\ndepth, // 100kB, as 200kB is max payload size, so half sounds reasonable\nmaxSize) {\n  if (depth === void 0) {\n    depth = 3;\n  }\n\n  if (maxSize === void 0) {\n    maxSize = 100 * 1024;\n  }\n\n  var serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized;\n}\n/** Transforms any input value into a string form, either primitive value or a type of the input */\n\nfunction serializeValue(value) {\n  var type = Object.prototype.toString.call(value); // Node.js REPL notation\n\n  if (typeof value === 'string') {\n    return value;\n  }\n\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  var normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\n\n\nfunction normalizeValue(value, key) {\n  if (key === 'domain' && typeof value === 'object' && value._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof global !== 'undefined' && value === global) {\n    return '[Global]';\n  }\n\n  if (typeof window !== 'undefined' && value === window) {\n    return '[Window]';\n  }\n\n  if (typeof document !== 'undefined' && value === document) {\n    return '[Document]';\n  } // tslint:disable-next-line:strict-type-predicates\n\n\n  if (typeof Event !== 'undefined' && value instanceof Event) {\n    return Object.getPrototypeOf(value) ? value.constructor.name : 'Event';\n  } // React's SyntheticEvent thingy\n\n\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (Number.isNaN(value)) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return \"[Function: \" + (value.name || '<unknown-function-name>') + \"]\";\n  }\n\n  return value;\n}\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n\n\nexport function walk(key, value, depth, memo) {\n  if (depth === void 0) {\n    depth = +Infinity;\n  }\n\n  if (memo === void 0) {\n    memo = new Memo();\n  } // If we reach the maximum depth, serialize whatever has left\n\n\n  if (depth === 0) {\n    return serializeValue(value);\n  } // If value implements `toJSON` method, call it and return early\n  // tslint:disable:no-unsafe-any\n\n\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  } // tslint:enable:no-unsafe-any\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n\n\n  var normalized = normalizeValue(value, key);\n\n  if (isPrimitive(normalized)) {\n    return normalized;\n  } // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n\n\n  var source = isError(value) ? objectifyError(value) : value; // Create an accumulator that will act as a parent for all future itterations of that branch\n\n  var acc = Array.isArray(value) ? [] : {}; // If we already walked that branch, bail out, as it's circular reference\n\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  } // Walk all keys of the source\n\n\n  for (var innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    } // Recursively walk through all the child nodes\n\n\n    acc[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  } // Once walked through all the branches, remove the parent from memo storage\n\n\n  memo.unmemoize(value); // Return accumulated values\n\n  return acc;\n}\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n\nexport function normalize(input, depth) {\n  try {\n    // tslint:disable-next-line:no-unsafe-any\n    return JSON.parse(JSON.stringify(input, function (key, value) {\n      return walk(key, value, depth);\n    }));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}"],"sourceRoot":""}