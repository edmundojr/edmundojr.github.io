{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Blog","render","pageTitle","get","this","posts","_get","page","currentPage","numPages","prevPage","toString","nextPage","isFirst","isLast","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","description","className","map","_ref","i","node","index","_node$frontmatter","frontmatter","date","slug","fields","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","rel","aria-label","React","Component","blog"],"mappings":"kQAOqBA,4FACnBC,kBACE,IAAMC,EAAYC,cAAIC,KAAM,sCACtBC,EAAQF,cAAIC,KAAM,sCAFjBE,EAGiCH,cAAIC,KAAM,qBAA7BG,EAHdD,EAGCE,YAAmBC,EAHpBH,EAGoBG,SACrBC,EAAWH,EAAO,GAAM,EAAI,UAAYA,EAAO,GAAGI,WAClDC,EAAW,UAAYL,EAAO,GAAGI,WACjCE,EAAmB,IAATN,EACVO,EAASP,IAASE,EACxB,OACEM,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAOlB,EAAY,gBAC3Ba,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEE,MAAO,sDACPC,YAAa,+BAEfN,EAAAC,EAAAC,cAAA,QAAMK,UAAW,iCACdjB,EAAMkB,IAAI,SAAAC,EAAkBC,GAAM,IAArBC,EAAqBF,EAArBE,KAAMC,EAAeH,EAAfG,MAAeC,EAI7BF,EAFFG,YAAeT,EAFgBQ,EAEhBR,MAAOC,EAFSO,EAETP,YAAaS,EAFJF,EAEIE,KACzBC,EACRL,EADFM,OAAUD,KAEZ,OACEhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEe,IAAKH,EAAOH,EACZI,KAAMA,EACNX,MAAOA,EACPC,YAAaA,EACbS,KAAMA,OAKdf,EAAAC,EAAAC,cAAA,OAAKK,UAAU,iDACXT,GACAE,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMC,GAAIzB,EAAU0B,IAAI,OAAOC,aAAW,iBAA1C,WAIAvB,GACAC,EAAAC,EAAAC,cAACiB,EAAA,KAAD,CAAMC,GAAIvB,EAAUwB,IAAI,OAAOC,aAAW,aAA1C,gBAxCsBC,IAAMC,WAkD3BC,EAAI","file":"component---src-templates-blog-js-593333cba64e995d5224.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { get } from 'lodash'\n\nimport { Layout, Hero, PostCard } from '../components'\n\nexport default class Blog extends React.Component {\n  render() {\n    const pageTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n    const { currentPage: page, numPages } = get(this, 'props.pageContext')\n    const prevPage = page - 1 === 1 ? '/blog/' : (page - 1).toString()\n    const nextPage = '/blog/' + (page + 1).toString()\n    const isFirst = page === 1\n    const isLast = page === numPages\n    return (\n      <Layout>\n        <Helmet title={pageTitle + ' × Articles'} />\n        <Hero\n          title={\"Exploring ideas about design, code, and technology.\"}\n          description={\"+ some other random stuff.\"}\n        />\n        <main className={'blog-grid blog-grid--layout-1'}>\n          {posts.map(({ node, index }, i) => {\n            const {\n              frontmatter: { title, description, date },\n              fields: { slug },\n            } = node\n            return (\n              <PostCard\n                key={date + index}\n                slug={slug}\n                title={title}\n                description={description}\n                date={date}\n              />\n            )\n          })}\n        </main>\n        <div className=\"pagination text-center h2 font-weight-bolder\">\n          {!isFirst && (\n            <Link to={prevPage} rel=\"prev\" aria-label=\"Previous page\">\n              ← Prev\n            </Link>\n          )}\n          {!isLast && (\n            <Link to={nextPage} rel=\"next\" aria-label=\"Next page\">\n              Next →\n            </Link>\n          )}\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const blog = graphql`\n  query blog($limit: Int!, $skip: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            description\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}