{"version":3,"sources":["webpack:///./src/pages/reading.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["LibraryIndex","render","siteTitle","get","this","books","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","_components_Hero__WEBPACK_IMPORTED_MODULE_5__","type","description","className","map","_ref","node","id","bookTitle","title_without_series","bookCover","large_image_url","image_url","small_image_url","bookAuthorName","authors","name","bookAuthorImage","key","src","alt","style","backgroundImage","React","Component","pageQuery","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","match","e"],"mappings":"gRAQqBA,4FACnBC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,qCAExB,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAOT,EAAY,eAC3BI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,KAAM,QACNF,MAAO,qCACPG,YAAa,yBAEfR,EAAAC,EAAAC,cAAA,QAAMO,UAAW,mBACfT,EAAAC,EAAAC,cAAA,OAAKO,UAAW,WACbV,EAAMW,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNC,EAAKD,EAAKC,GACVC,EAAYF,EAAKG,qBACjBC,EAAYJ,EAAKK,gBACnBL,EAAKK,gBACLL,EAAKM,UACHN,EAAKM,UACLN,EAAKO,gBACLC,EAAiBR,EAAKS,QAAQ,GAAGC,KACjCC,EAAkBX,EAAKS,QAAQ,GAAGH,UACxC,OACElB,EAAAC,EAAAC,cAAA,OAAKsB,IAAKX,EAAIJ,UAAW,QACvBT,EAAAC,EAAAC,cAAA,OACEuB,IAAKT,EACLP,UAAW,uBACXiB,IAAKZ,IAEPd,EAAAC,EAAAC,cAAA,OAAKO,UAAW,gBACdT,EAAAC,EAAAC,cAAA,MAAIO,UAAW,sBAAuBK,GACtCd,EAAAC,EAAAC,cAAA,KAAGO,UAAW,uBACZT,EAAAC,EAAAC,cAAA,UACEyB,MAAO,CACLC,gBAAiB,OAASL,EAAkB,KAE9Cd,UAAW,wCAEbT,EAAAC,EAAAC,cAAA,kBAAakB,eAzCOS,IAAMC,WAsDnCC,EAAS,kCC9DtB,IAAAC,EAASC,EAAQ,IAAcC,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBF,EAAQ,KAAgBD,EAAAG,EAH1C,OAG0C,CAC1CI,cAAA,EACA1C,IAAA,WACA,IACA,UAAAC,MAAA0C,MAAAF,GAAA,GACK,MAAAG,GACL","file":"component---src-pages-reading-js-976f92063043f5282f21.js","sourcesContent":["import React from 'react'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport Hero from '../components/Hero'\nimport Helmet from 'react-helmet'\n\nexport default class LibraryIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const books = get(this, 'props.data.allGoodreadsBook.edges')\n\n    return (\n      <Layout>\n        <Helmet title={siteTitle + ' Ã— Reading'} />\n        <Hero\n          type={'large'}\n          title={'From the library of Edmundo Santos'}\n          description={'Designer & Book Nerd'}\n        />\n        <main className={'container-fluid'}>\n          <div className={'reading'}>\n            {books.map(({ node }) => {\n              const id = node.id\n              const bookTitle = node.title_without_series\n              const bookCover = node.large_image_url\n                ? node.large_image_url\n                : node.image_url\n                  ? node.image_url\n                  : node.small_image_url\n              const bookAuthorName = node.authors[0].name\n              const bookAuthorImage = node.authors[0].image_url\n              return (\n                <div key={id} className={'book'}>\n                  <img\n                    src={bookCover}\n                    className={'book-cover img-fluid'}\n                    alt={bookTitle}\n                  />\n                  <div className={'book-details'}>\n                    <h4 className={'book-details-title'}>{bookTitle}</h4>\n                    <p className={'book-details-author'}>\n                      <figure\n                        style={{\n                          backgroundImage: 'url(' + bookAuthorImage + ')',\n                        }}\n                        className={'book-details-author-image img-fluid'}\n                      />\n                      <figcaption>{bookAuthorName}</figcaption>\n                    </p>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </main>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query LibraryQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allGoodreadsBook(sort: { fields: published, order: DESC }) {\n      edges {\n        node {\n          id\n          title_without_series\n          image_url\n          large_image_url\n          small_image_url\n          authors {\n            id\n            name\n            image_url\n          }\n        }\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}