{"version":3,"sources":["webpack:///./src/pages/reading.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["LibraryIndex","render","siteTitle","get","this","books","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","title","_components_Hero__WEBPACK_IMPORTED_MODULE_5__","description","className","map","_ref","node","id","title_without_series","image","image_url","author","authors","name","key","src","alt","React","Component","pageQuery","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","match","e"],"mappings":"gRAQqBA,4FACnBC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,qCAExB,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAOT,EAAY,eAC3BI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACED,MAAO,qCACPE,YAAa,yBAEfP,EAAAC,EAAAC,cAAA,QAAMM,UAAU,mBACdR,EAAAC,EAAAC,cAAA,OAAKM,UAAW,WACbT,EAAMU,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNC,EAAKD,EAAKC,GACVP,EAAQM,EAAKE,qBACbC,EAAQH,EAAKI,UACbC,EAASL,EAAKM,QAAQ,GAAGC,KAC/B,OACElB,EAAAC,EAAAC,cAAA,OAAKiB,IAAKP,EAAIJ,UAAW,QACvBR,EAAAC,EAAAC,cAAA,OAAKkB,IAAKN,EAAON,UAAU,uBAAuBa,IAAI,KACtDrB,EAAAC,EAAAC,cAAA,OAAKM,UAAW,gBACbH,EAAML,EAAAC,EAAAC,cAAA,WACPF,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kCAAkCQ,cAxB3BM,IAAMC,WAoCnCC,EAAS,kCC5CtB,IAAAC,EAASC,EAAQ,IAAcC,EAC/BC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAkBF,EAAQ,KAAgBD,EAAAG,EAH1C,OAG0C,CAC1CI,cAAA,EACAnC,IAAA,WACA,IACA,UAAAC,MAAAmC,MAAAF,GAAA,GACK,MAAAG,GACL","file":"component---src-pages-reading-js-96bfade20aa41d0d2751.js","sourcesContent":["import React from 'react'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport Hero from '../components/Hero'\nimport Helmet from 'react-helmet'\n\nexport default class LibraryIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const books = get(this, 'props.data.allGoodreadsBook.edges')\n\n    return (\n      <Layout>\n        <Helmet title={siteTitle + ' Ã— Reading'} />\n        <Hero\n          title={\"From the library of Edmundo Santos\"}\n          description={\"Designer & Book Nerd\"}\n        />\n        <main className=\"container-fluid\">\n          <div className={\"reading\"}>\n            {books.map(({ node }) => {\n              const id = node.id\n              const title = node.title_without_series\n              const image = node.image_url\n              const author = node.authors[0].name\n              return (\n                <div key={id} className={\"book\"}>\n                  <img src={image} className=\"book-cover img-fluid\" alt=\"\"/>\n                  <div className={\"book-details\"}>\n                    {title}<br/>\n                    <div className=\"book-details-author text-muted\">{author}</div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        </main>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query LibraryQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allGoodreadsBook(sort: { fields: published, order: DESC }) {\n      edges {\n        node {\n          id\n          title\n          title_without_series\n          image_url\n          link\n          num_pages\n          publisher\n          publication_day\n          publication_month\n          publication_year\n          published\n          authors {\n            id\n            name\n          }\n        }\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}