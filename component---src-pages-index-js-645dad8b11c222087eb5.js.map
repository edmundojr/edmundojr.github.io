{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["HomeIndex","render","siteTitle","get","this","posts","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","title","_components_Hero__WEBPACK_IMPORTED_MODULE_7__","description","className","map","_ref","node","postTitle","frontmatter","postLink","fields","slug","postDate","date","replace","postTags","tags","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","dangerouslySetInnerHTML","__html","html","tag","index","React","Component","pageQuery"],"mappings":"wRASqBA,4FACnBC,kBACE,IAAMC,EAAYC,IAAIC,KAAM,sCACtBC,EAAQF,IAAIC,KAAM,sCAExB,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAQI,MAAOT,EAAY,gBAC3BI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACED,MAAO,kCACPE,YAAa,8CAEfP,EAAAC,EAAAC,cAAA,QAAMM,UAAU,mBACbT,EAAMU,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNC,EAAYD,EAAKE,YAAYR,MAC7BS,EAAWH,EAAKI,OAAOC,KACvBC,EAAWN,EAAKE,YAAYK,KAAKC,QAAQ,SAAU,mBACnDC,EAAWT,EAAKE,YAAYQ,KAClC,OACErB,EAAAC,EAAAC,cAAA,WAASoB,IAAKR,EAAUN,UAAU,QAChCR,EAAAC,EAAAC,cAAA,MAAIM,UAAU,eACZR,EAAAC,EAAAC,cAACqB,EAAA,KAAD,CAAMC,GAAIV,EAAUN,UAAU,4CAC5BR,EAAAC,EAAAC,cAAA,QAAMM,UAAU,oEAChBR,EAAAC,EAAAC,cAAA,QAAMM,UAAU,6CACbI,KAIPZ,EAAAC,EAAAC,cAAA,OAAKM,UAAU,yBACbR,EAAAC,EAAAC,cAAA,OACEM,UAAU,uEACViB,wBAAyB,CAAEC,OAAQf,EAAKgB,QAC1C3B,EAAAC,EAAAC,cAAA,SAAOM,UAAU,uHACfR,EAAAC,EAAAC,cAAA,QACEM,UAAU,4BACViB,wBAAyB,CAAEC,OAAQT,KACrCjB,EAAAC,EAAAC,cAAA,MAAIM,UAAU,cACXY,EAASX,IAAI,SAACmB,EAAKC,GAAN,OACZ7B,EAAAC,EAAAC,cAAA,MAAIoB,IAAKO,GACND,iBAvCYE,IAAMC,WAsDhCC,EAAS","file":"component---src-pages-index-js-645dad8b11c222087eb5.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport get from 'lodash/get'\nimport { graphql } from 'gatsby'\n\nimport Layout from \"../components/layout\"\nimport Hero from '../components/Hero'\n\nexport default class HomeIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allMarkdownRemark.edges')\n\n    return (\n      <Layout>\n        <Helmet title={siteTitle + ' Ã— Articles'} />\n        <Hero\n          title={\"From the desk of Edmundo Santos\"}\n          description={\"Multidisciplinary Designer & UI Developer\"}\n        />\n        <main className=\"container-fluid\">\n          {posts.map(({ node }) => {\n            const postTitle = node.frontmatter.title\n            const postLink = node.fields.slug\n            const postDate = node.frontmatter.date.replace(/(\\S+)/g, '<span>$1</span>')\n            const postTags = node.frontmatter.tags\n            return (\n              <article key={postLink} className=\"post\">\n                <h1 className=\"post__title\">\n                  <Link to={postLink} className=\"post__title__link row align-items-center\">\n                    <span className=\"post__title__detail col-1 offset-lg-1 order-last order-sm-first\" />\n                    <span className=\"col-11 col-md-7 order-first order-sm-last\">\n                      {postTitle}\n                    </span>\n                  </Link>\n                </h1>\n                <div className=\"row align-items-start\">\n                  <div\n                    className=\"col-sm-11 col-md-7 offset-sm-1 offset-lg-2 order-last order-md-first\"\n                    dangerouslySetInnerHTML={{ __html: node.html }} />\n                  <aside className=\"post__meta col-sm-11 col-md-3 text-md-center offset-sm-1 offset-md-0 order-first order-md-last position-sticky mb-2\">\n                    <time\n                      className=\"post__date d-inline-block\"\n                      dangerouslySetInnerHTML={{ __html: postDate }} />\n                    <ul className=\"post__tags\">\n                      {postTags.map((tag, index) => (\n                        <li key={index}>\n                          {tag}\n                        </li>\n                      ))}\n                    </ul>\n                  </aside>\n                </div>\n              </article>\n            )\n          })}\n        </main>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          html\n          frontmatter {\n            date(formatString: \"DD MMM YYYY\")\n            title\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}